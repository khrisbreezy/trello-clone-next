{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Cookies from 'js-cookie';\nimport { NotificationManager } from 'react-notifications';\nimport axiosInstance from '../../config/axios';\nexport var LOGIN = 'LOGIN';\nexport var LOGOUT = 'LOGOUT';\nexport var SYNCCOOKIES = 'SYNCCOOKIES';\nexport var loginAsync = function loginAsync(data) {\n  var newData = data;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axiosInstance$, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axiosInstance.post(\"login\", newData);\n\n            case 3:\n              _yield$axiosInstance$ = _context.sent;\n              response = _yield$axiosInstance$.data;\n              dispatch(storeAuth(response.data));\n              NotificationManager.success(response.message, '', 5000);\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              NotificationManager.error(_context.t0.response.data.message, '', 5000);\n              return _context.abrupt(\"return\", 'error');\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var storeAuth = function storeAuth(data) {\n  console.log({\n    data: data\n  });\n  Cookies.set('token', data.token, {\n    secure: true\n  });\n  Cookies.set('user', JSON.stringify(data.user), {\n    secure: true\n  });\n  return {\n    type: 'LOGIN',\n    data: data\n  };\n};\nexport var syncCookiesToStore = function syncCookiesToStore(data) {\n  return {\n    type: SYNCCOOKIES,\n    data: data\n  };\n};\nexport var logout = function logout() {\n  Cookies.remove('token');\n  Cookies.remove('user');\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/store/actions/auth.js"],"names":["Cookies","NotificationManager","axiosInstance","LOGIN","LOGOUT","SYNCCOOKIES","loginAsync","data","newData","dispatch","post","response","storeAuth","success","message","error","console","log","set","token","secure","JSON","stringify","user","type","syncCookiesToStore","logout","remove"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAAQC,mBAAR,QAAkC,qBAAlC;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AAGA,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC,MAAIC,OAAO,GAAGD,IAAd;AACA;AAAA,wEAAO,iBAAME,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEgCP,aAAa,CAACQ,IAAd,UAA4BF,OAA5B,CAFhC;;AAAA;AAAA;AAEcG,cAAAA,QAFd,yBAEQJ,IAFR;AAGCE,cAAAA,QAAQ,CAACG,SAAS,CAACD,QAAQ,CAACJ,IAAV,CAAV,CAAR;AACAN,cAAAA,mBAAmB,CAACY,OAApB,CAA4BF,QAAQ,CAACG,OAArC,EAA8C,EAA9C,EAAkD,IAAlD;AAJD;AAAA;;AAAA;AAAA;AAAA;AAMCb,cAAAA,mBAAmB,CAACc,KAApB,CAA0B,YAAMJ,QAAN,CAAeJ,IAAf,CAAoBO,OAA9C,EAAuD,EAAvD,EAA2D,IAA3D;AAND,+CAOQ,OAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAUH,CAZM;AAeP,OAAO,IAAMF,SAAS,GAAG,SAAZA,SAAY,CAAAL,IAAI,EAAI;AAC7BS,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACV,IAAAA,IAAI,EAAJA;AAAD,GAAZ;AACAP,EAAAA,OAAO,CAACkB,GAAR,CAAY,OAAZ,EAAqBX,IAAI,CAACY,KAA1B,EAAiC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjC;AACApB,EAAAA,OAAO,CAACkB,GAAR,CAAY,MAAZ,EAAoBG,IAAI,CAACC,SAAL,CAAef,IAAI,CAACgB,IAApB,CAApB,EAA+C;AAAEH,IAAAA,MAAM,EAAE;AAAV,GAA/C;AACA,SAAO;AACHI,IAAAA,IAAI,EAAE,OADH;AAEHjB,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CARM;AAUP,OAAO,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAlB,IAAI;AAAA,SAAK;AAACiB,IAAAA,IAAI,EAAEnB,WAAP;AAAoBE,IAAAA,IAAI,EAAJA;AAApB,GAAL;AAAA,CAA/B;AAGP,OAAO,IAAMmB,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB1B,EAAAA,OAAO,CAAC2B,MAAR,CAAe,OAAf;AACA3B,EAAAA,OAAO,CAAC2B,MAAR,CAAe,MAAf;AAEA,SAAO;AACHH,IAAAA,IAAI,EAAEpB;AADH,GAAP;AAGH,CAPM","sourcesContent":["import Cookies from 'js-cookie';\nimport {NotificationManager} from 'react-notifications';\n\nimport axiosInstance from '../../config/axios';\n\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SYNCCOOKIES = 'SYNCCOOKIES';\n\n\nexport const loginAsync = (data) => {\n    let newData = data;\n    return async dispatch => {\n        try {\n            const {data: response} = await axiosInstance.post(`login`, newData);\n            dispatch(storeAuth(response.data));\n            NotificationManager.success(response.message, '', 5000);\n        } catch (error) {\n            NotificationManager.error(error.response.data.message, '', 5000);\n            return 'error';\n        }\n    }\n}\n\n\nexport const storeAuth = data => {\n    console.log({data});\n    Cookies.set('token', data.token, { secure: true });\n    Cookies.set('user', JSON.stringify(data.user), { secure: true });\n    return {\n        type: 'LOGIN',\n        data\n    }\n};\n\nexport const syncCookiesToStore = data => ({type: SYNCCOOKIES, data});\n\n\nexport const logout = () => {\n    Cookies.remove('token');\n    Cookies.remove('user');\n\n    return {\n        type: LOGOUT\n    }\n}\n"]},"metadata":{},"sourceType":"module"}