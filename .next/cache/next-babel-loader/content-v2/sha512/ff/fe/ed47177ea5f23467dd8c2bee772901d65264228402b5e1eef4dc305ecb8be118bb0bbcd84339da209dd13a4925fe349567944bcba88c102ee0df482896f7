{"ast":null,"code":"import Cookies from 'js-cookie';\nimport { NotificationManager } from 'react-notifications';\nimport axiosInstance from '../../config/axios';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const loginAsync = data => {\n  let newData = data;\n  return async dispatch => {\n    try {\n      const {\n        data: response\n      } = await axiosInstance.post(`login`, newData);\n      dispatch(storeAuth(response.data));\n      NotificationManager.success(response.message, '', 5000);\n    } catch (error) {\n      NotificationManager.error(error.response.data.message, '', 5000);\n      return 'error';\n    }\n  };\n};\nexport const storeAuth = data => {\n  Cookies.set('token', data.token, {\n    secure: true\n  });\n  Cookies.set('user', JSON.stringify(data.user), {\n    secure: true\n  });\n  return {\n    type: 'LOGIN',\n    data\n  };\n};\nexport const logout = () => {\n  Cookies.remove('token');\n  Cookies.remove('user');\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/store/actions/auth.js"],"names":["Cookies","NotificationManager","axiosInstance","LOGIN","LOGOUT","loginAsync","data","newData","dispatch","response","post","storeAuth","success","message","error","set","token","secure","JSON","stringify","user","type","logout","remove"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAAQC,mBAAR,QAAkC,qBAAlC;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AAGA,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AAGP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,MAAIC,OAAO,GAAGD,IAAd;AACA,SAAO,MAAME,QAAN,IAAkB;AACrB,QAAI;AACA,YAAM;AAACF,QAAAA,IAAI,EAAEG;AAAP,UAAmB,MAAMP,aAAa,CAACQ,IAAd,CAAoB,OAApB,EAA4BH,OAA5B,CAA/B;AACAC,MAAAA,QAAQ,CAACG,SAAS,CAACF,QAAQ,CAACH,IAAV,CAAV,CAAR;AACAL,MAAAA,mBAAmB,CAACW,OAApB,CAA4BH,QAAQ,CAACI,OAArC,EAA8C,EAA9C,EAAkD,IAAlD;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZb,MAAAA,mBAAmB,CAACa,KAApB,CAA0BA,KAAK,CAACL,QAAN,CAAeH,IAAf,CAAoBO,OAA9C,EAAuD,EAAvD,EAA2D,IAA3D;AACA,aAAO,OAAP;AACH;AACJ,GATD;AAUH,CAZM;AAeP,OAAO,MAAMF,SAAS,GAAGL,IAAI,IAAI;AAC7BN,EAAAA,OAAO,CAACe,GAAR,CAAY,OAAZ,EAAqBT,IAAI,CAACU,KAA1B,EAAiC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjC;AACAjB,EAAAA,OAAO,CAACe,GAAR,CAAY,MAAZ,EAAoBG,IAAI,CAACC,SAAL,CAAeb,IAAI,CAACc,IAApB,CAApB,EAA+C;AAAEH,IAAAA,MAAM,EAAE;AAAV,GAA/C;AACA,SAAO;AACHI,IAAAA,IAAI,EAAE,OADH;AAEHf,IAAAA;AAFG,GAAP;AAIH,CAPM;AAUP,OAAO,MAAMgB,MAAM,GAAG,MAAM;AACxBtB,EAAAA,OAAO,CAACuB,MAAR,CAAe,OAAf;AACAvB,EAAAA,OAAO,CAACuB,MAAR,CAAe,MAAf;AAEA,SAAO;AACHF,IAAAA,IAAI,EAAEjB;AADH,GAAP;AAGH,CAPM","sourcesContent":["import Cookies from 'js-cookie';\nimport {NotificationManager} from 'react-notifications';\n\nimport axiosInstance from '../../config/axios';\n\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\n\nexport const loginAsync = (data) => {\n    let newData = data;\n    return async dispatch => {\n        try {\n            const {data: response} = await axiosInstance.post(`login`, newData);\n            dispatch(storeAuth(response.data));\n            NotificationManager.success(response.message, '', 5000);\n        } catch (error) {\n            NotificationManager.error(error.response.data.message, '', 5000);\n            return 'error';\n        }\n    }\n}\n\n\nexport const storeAuth = data => {\n    Cookies.set('token', data.token, { secure: true });\n    Cookies.set('user', JSON.stringify(data.user), { secure: true });\n    return {\n        type: 'LOGIN',\n        data\n    }\n};\n\n\nexport const logout = () => {\n    Cookies.remove('token');\n    Cookies.remove('user');\n\n    return {\n        type: LOGOUT\n    }\n}\n"]},"metadata":{},"sourceType":"module"}