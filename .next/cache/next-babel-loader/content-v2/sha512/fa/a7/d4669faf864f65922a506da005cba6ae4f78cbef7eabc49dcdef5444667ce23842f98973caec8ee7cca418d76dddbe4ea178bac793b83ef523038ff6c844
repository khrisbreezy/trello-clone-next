{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Cookies from 'js-cookie';\nimport { NotificationManager } from 'react-notifications';\nimport axiosInstance from '../../config/axios';\nexport var STORE_AUTH = 'STORE_AUTH';\nexport var LOGIN = 'LOGIN';\nexport var LOGOUT = 'LOGOUT';\nexport var SYNCCOOKIES = 'SYNCCOOKIES';\nexport var loginAsync = function loginAsync(data) {\n  var newData = data;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axiosInstance$, _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axiosInstance.post(\"login\", newData);\n\n            case 3:\n              _yield$axiosInstance$ = _context.sent;\n              _data = _yield$axiosInstance$.data;\n              console.log('====================================');\n              console.log({\n                data: _data\n              });\n              console.log('====================================');\n              return _context.abrupt(\"return\");\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              NotificationManager.error(_context.t0.response.data.message, '', 5000);\n              return _context.abrupt(\"return\", 'error');\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var storeAuth = function storeAuth(data) {\n  Cookies.set('token', data.authorization.access_token, {\n    secure: true\n  });\n  Cookies.set('userType', data.user_type);\n\n  if (data.user_type === 'tenant') {\n    Cookies.set('user', JSON.stringify(data.tenant), {\n      secure: true\n    });\n    data['user'] = data.tenant;\n  } else {\n    Cookies.set('user', JSON.stringify(data.agent), {\n      secure: true\n    });\n    data['user'] = data.agent;\n  }\n\n  data['token'] = data.authorization.access_token;\n  return {\n    type: 'LOGIN',\n    data: data\n  };\n};\nexport var syncCookiesToStore = function syncCookiesToStore(data) {\n  return {\n    type: SYNCCOOKIES,\n    data: data\n  };\n};\nexport var logout = function logout() {\n  Cookies.remove('token');\n  Cookies.remove('user');\n  Cookies.remove('userType');\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/store/actions/auth.js"],"names":["Cookies","NotificationManager","axiosInstance","STORE_AUTH","LOGIN","LOGOUT","SYNCCOOKIES","loginAsync","data","newData","dispatch","post","console","log","error","response","message","storeAuth","set","authorization","access_token","secure","user_type","JSON","stringify","tenant","agent","type","syncCookiesToStore","logout","remove"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAAQC,mBAAR,QAAkC,qBAAlC;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AAGA,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC,MAAIC,OAAO,GAAGD,IAAd;AACA;AAAA,wEAAO,iBAAME,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEsBR,aAAa,CAACS,IAAd,UAA4BF,OAA5B,CAFtB;;AAAA;AAAA;AAEQD,cAAAA,KAFR,yBAEQA,IAFR;AAGCI,cAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,gBAAAA,IAAI,EAAJA;AAAD,eAAZ;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AALD;;AAAA;AAAA;AAAA;AAUCZ,cAAAA,mBAAmB,CAACa,KAApB,CAA0B,YAAMC,QAAN,CAAeP,IAAf,CAAoBQ,OAA9C,EAAuD,EAAvD,EAA2D,IAA3D;AAVD,+CAWQ,OAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcH,CAhBM;AAmBP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAT,IAAI,EAAI;AAC7BR,EAAAA,OAAO,CAACkB,GAAR,CAAY,OAAZ,EAAqBV,IAAI,CAACW,aAAL,CAAmBC,YAAxC,EAAsD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAtD;AACArB,EAAAA,OAAO,CAACkB,GAAR,CAAY,UAAZ,EAAwBV,IAAI,CAACc,SAA7B;;AACA,MAAId,IAAI,CAACc,SAAL,KAAmB,QAAvB,EAAiC;AAC7BtB,IAAAA,OAAO,CAACkB,GAAR,CAAY,MAAZ,EAAoBK,IAAI,CAACC,SAAL,CAAehB,IAAI,CAACiB,MAApB,CAApB,EAAiD;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAjD;AACAb,IAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeA,IAAI,CAACiB,MAApB;AACH,GAHD,MAGO;AACHzB,IAAAA,OAAO,CAACkB,GAAR,CAAY,MAAZ,EAAoBK,IAAI,CAACC,SAAL,CAAehB,IAAI,CAACkB,KAApB,CAApB,EAAgD;AAAEL,MAAAA,MAAM,EAAE;AAAV,KAAhD;AACAb,IAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeA,IAAI,CAACkB,KAApB;AACH;;AACDlB,EAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBA,IAAI,CAACW,aAAL,CAAmBC,YAAnC;AAEA,SAAO;AACHO,IAAAA,IAAI,EAAE,OADH;AAEHnB,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CAhBM;AAkBP,OAAO,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAApB,IAAI;AAAA,SAAK;AAACmB,IAAAA,IAAI,EAAErB,WAAP;AAAoBE,IAAAA,IAAI,EAAJA;AAApB,GAAL;AAAA,CAA/B;AAGP,OAAO,IAAMqB,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB7B,EAAAA,OAAO,CAAC8B,MAAR,CAAe,OAAf;AACA9B,EAAAA,OAAO,CAAC8B,MAAR,CAAe,MAAf;AACA9B,EAAAA,OAAO,CAAC8B,MAAR,CAAe,UAAf;AAEA,SAAO;AACHH,IAAAA,IAAI,EAAEtB;AADH,GAAP;AAGH,CARM","sourcesContent":["import Cookies from 'js-cookie';\nimport {NotificationManager} from 'react-notifications';\n\nimport axiosInstance from '../../config/axios';\n\n\nexport const STORE_AUTH = 'STORE_AUTH';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SYNCCOOKIES = 'SYNCCOOKIES';\n\n\nexport const loginAsync = (data) => {\n    let newData = data;\n    return async dispatch => {\n        try {\n            const {data} = await axiosInstance.post(`login`, newData);\n            console.log('====================================');\n            console.log({data});\n            console.log('====================================');\n            return;\n            dispatch(storeAuth(response.data));\n            NotificationManager.success(response.message, '', 5000);\n        } catch (error) {\n            NotificationManager.error(error.response.data.message, '', 5000);\n            return 'error';\n        }\n    }\n}\n\n\nexport const storeAuth = data => {\n    Cookies.set('token', data.authorization.access_token, { secure: true });\n    Cookies.set('userType', data.user_type);\n    if (data.user_type === 'tenant') {\n        Cookies.set('user', JSON.stringify(data.tenant), { secure: true });\n        data['user'] = data.tenant;\n    } else {\n        Cookies.set('user', JSON.stringify(data.agent), { secure: true });\n        data['user'] = data.agent;\n    }\n    data['token'] = data.authorization.access_token;\n\n    return {\n        type: 'LOGIN',\n        data\n    }\n};\n\nexport const syncCookiesToStore = data => ({type: SYNCCOOKIES, data});\n\n\nexport const logout = () => {\n    Cookies.remove('token');\n    Cookies.remove('user');\n    Cookies.remove('userType');\n\n    return {\n        type: LOGOUT\n    }\n}\n"]},"metadata":{},"sourceType":"module"}