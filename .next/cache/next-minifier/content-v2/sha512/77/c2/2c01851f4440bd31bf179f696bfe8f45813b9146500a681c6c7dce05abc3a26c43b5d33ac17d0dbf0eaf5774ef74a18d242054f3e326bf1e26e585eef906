{"code":"_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{\"3m5b\":function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n,s=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},c=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}(),i=t(\"q1tI\"),a=(n=i)&&n.__esModule?n:{default:n},u=t(\"NJJe\"),o=t(\"81e5\");var l=function(e){function r(e){!function(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,r);var t=function(e,r){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!r||\"object\"!==typeof r&&\"function\"!==typeof r?e:r}(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return t.buildURI=t.buildURI.bind(t),t}return function(e,r){if(\"function\"!==typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof r);e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),r&&(Object.setPrototypeOf?Object.setPrototypeOf(e,r):e.__proto__=r)}(r,e),c(r,[{key:\"buildURI\",value:function(){return u.buildURI.apply(void 0,arguments)}},{key:\"handleLegacy\",value:function(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(window.navigator.msSaveOrOpenBlob){e.preventDefault();var t=this.props,n=t.data,s=t.headers,c=t.separator,i=t.filename,a=t.enclosingCharacter,o=t.uFEFF,l=r&&\"function\"===typeof n?n():n,f=new Blob([o?\"\\ufeff\":\"\",(0,u.toCSV)(l,s,c,a)]);return window.navigator.msSaveBlob(f,i),!1}}},{key:\"handleAsyncClick\",value:function(e){var r=this;this.props.onClick(e,(function(t){!1!==t?r.handleLegacy(e,!0):e.preventDefault()}))}},{key:\"handleSyncClick\",value:function(e){!1===this.props.onClick(e)?e.preventDefault():this.handleLegacy(e)}},{key:\"handleClick\",value:function(){var e=this;return function(r){if(\"function\"===typeof e.props.onClick)return e.props.asyncOnClick?e.handleAsyncClick(r):e.handleSyncClick(r);e.handleLegacy(r)}}},{key:\"render\",value:function(){var e=this,r=this.props,t=r.data,n=r.headers,c=r.separator,i=r.filename,u=r.uFEFF,o=r.children,l=(r.onClick,r.asyncOnClick,r.enclosingCharacter),f=function(e,r){var t={};for(var n in e)r.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}(r,[\"data\",\"headers\",\"separator\",\"filename\",\"uFEFF\",\"children\",\"onClick\",\"asyncOnClick\",\"enclosingCharacter\"]),d=\"undefined\"===typeof window?\"\":this.buildURI(t,u,n,c,l);return a.default.createElement(\"a\",s({download:i},f,{ref:function(r){return e.link=r},target:\"_self\",href:d,onClick:this.handleClick()}),o)}}]),r}(a.default.Component);l.defaultProps=o.defaultProps,l.propTypes=o.propTypes,r.default=l},\"6TX+\":function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/process-background-information\",function(){return t(\"nW/x\")}])},\"81e5\":function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.PropsNotForwarded=r.defaultProps=r.propTypes=void 0;var n,s=t(\"q1tI\"),c=((n=s)&&n.__esModule,t(\"17x9\"));r.propTypes={data:(0,c.oneOfType)([c.string,c.array,c.func]).isRequired,headers:c.array,target:c.string,separator:c.string,filename:c.string,uFEFF:c.bool,onClick:c.func,asyncOnClick:c.bool,enclosingCharacter:c.string},r.defaultProps={separator:\",\",filename:\"generatedBy_react-csv.csv\",uFEFF:!0,asyncOnClick:!1,enclosingCharacter:'\"'},r.PropsNotForwarded=[\"data\",\"headers\"]},HTVX:function(e,r,t){e.exports=t(\"SBul\")},NJJe:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};function s(e){if(Array.isArray(e)){for(var r=0,t=Array(e.length);r<e.length;r++)t[r]=e[r];return t}return Array.from(e)}var c=r.isSafari=function(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)},i=r.isJsons=function(e){return Array.isArray(e)&&e.every((function(e){return\"object\"===(\"undefined\"===typeof e?\"undefined\":n(e))&&!(e instanceof Array)}))},a=r.isArrays=function(e){return Array.isArray(e)&&e.every((function(e){return Array.isArray(e)}))},u=r.jsonsHeaders=function(e){return Array.from(e.map((function(e){return Object.keys(e)})).reduce((function(e,r){return new Set([].concat(s(e),s(r)))}),[]))},o=r.jsons2arrays=function(e,r){var t=r=r||u(e),n=r;i(r)&&(t=r.map((function(e){return e.label})),n=r.map((function(e){return e.key})));var c=e.map((function(e){return n.map((function(r){return l(r,e)}))}));return[t].concat(s(c))},l=r.getHeaderValue=function(e,r){var t=e.replace(/\\[([^\\]]+)]/g,\".$1\").split(\".\").reduce((function(e,r,t,n){var s=e[r];if(void 0!==s&&null!==s)return s;n.splice(1)}),r);return void 0===t?e in r?r[e]:\"\":t},f=r.elementOrEmpty=function(e){return\"undefined\"===typeof e||null===e?\"\":e},d=r.joiner=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\",\",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:'\"';return e.filter((function(e){return e})).map((function(e){return e.map((function(e){return f(e)})).map((function(e){return\"\"+t+e+t})).join(r)})).join(\"\\n\")},b=r.arrays2csv=function(e,r,t,n){return d(r?[r].concat(s(e)):e,t,n)},p=r.jsons2csv=function(e,r,t,n){return d(o(e,r),t,n)},y=r.string2csv=function(e,r,t,n){return r?r.join(t)+\"\\n\"+e:e.replace(/\"/g,'\"\"')},m=r.toCSV=function(e,r,t,n){if(i(e))return p(e,r,t,n);if(a(e))return b(e,r,t,n);if(\"string\"===typeof e)return y(e,r,t);throw new TypeError('Data should be a \"String\", \"Array of arrays\" OR \"Array of objects\" ')};r.buildURI=function(e,r,t,n,s){var i=m(e,t,n,s),a=c()?\"application/csv\":\"text/csv\",u=new Blob([r?\"\\ufeff\":\"\",i],{type:a}),o=\"data:\"+a+\";charset=utf-8,\"+(r?\"\\ufeff\":\"\")+i,l=window.URL||window.webkitURL;return\"undefined\"===typeof l.createObjectURL?o:l.createObjectURL(u)}},SBul:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.CSVLink=r.CSVDownload=void 0;var n=c(t(\"YDre\")),s=c(t(\"3m5b\"));function c(e){return e&&e.__esModule?e:{default:e}}r.CSVDownload=n.default,r.CSVLink=s.default},YDre:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n,s=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}(),c=t(\"q1tI\"),i=(n=c)&&n.__esModule?n:{default:n},a=t(\"NJJe\"),u=t(\"81e5\");var o=function(e){function r(e){!function(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,r);var t=function(e,r){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!r||\"object\"!==typeof r&&\"function\"!==typeof r?e:r}(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return t.state={},t}return function(e,r){if(\"function\"!==typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof r);e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),r&&(Object.setPrototypeOf?Object.setPrototypeOf(e,r):e.__proto__=r)}(r,e),s(r,[{key:\"buildURI\",value:function(){return a.buildURI.apply(void 0,arguments)}},{key:\"componentDidMount\",value:function(){var e=this.props,r=e.data,t=e.headers,n=e.separator,s=e.enclosingCharacter,c=e.uFEFF,i=e.target,a=e.specs,u=e.replace;this.state.page=window.open(this.buildURI(r,c,t,n,s),i,a,u)}},{key:\"getWindow\",value:function(){return this.state.page}},{key:\"render\",value:function(){return null}}]),r}(i.default.Component);o.defaultProps=Object.assign(u.defaultProps,{target:\"_blank\"}),o.propTypes=u.propTypes,r.default=o},cpVT:function(e,r,t){\"use strict\";function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}t.d(r,\"a\",(function(){return n}))},\"nW/x\":function(e,r,t){\"use strict\";t.r(r);var n=t(\"nKUr\"),s=t(\"cpVT\"),c=t(\"vJKn\"),i=t.n(c),a=t(\"rg98\"),u=t(\"q1tI\"),o=e=>e instanceof HTMLElement;const l=\"blur\",f=\"change\",d=\"input\",b=\"onBlur\",p=\"onChange\",y=\"onSubmit\",m=\"onTouched\",j=\"all\",h=\"undefined\",O=\"max\",v=\"min\",g=\"maxLength\",w=\"minLength\",k=\"pattern\",x=\"required\",A=\"validate\";var C=e=>null==e;const N=e=>\"object\"===typeof e;var V=e=>!C(e)&&!Array.isArray(e)&&N(e)&&!(e instanceof Date),S=e=>/^\\w*$/.test(e),R=e=>e.filter(Boolean),F=e=>R(e.replace(/[\"|']/g,\"\").replace(/\\[/g,\".\").replace(/\\]/g,\"\").split(\".\"));function E(e,r,t){let n=-1;const s=S(r)?[r]:F(r),c=s.length,i=c-1;for(;++n<c;){const r=s[n];let c=t;if(n!==i){const t=e[r];c=V(t)||Array.isArray(t)?t:isNaN(+s[n+1])?{}:[]}e[r]=c,e=e[r]}return e}var _=(e,r={})=>{for(const t in e)S(t)?r[t]=e[t]:E(r,t,e[t]);return r},D=e=>void 0===e,P=(e={},r,t)=>{const n=R(r.split(/[,[\\].]+?/)).reduce(((e,r)=>C(e)?e:e[r]),e);return D(n)||n===e?D(e[r])?t:e[r]:n},T=(e,r)=>{o(e)&&e.removeEventListener&&(e.removeEventListener(d,r),e.removeEventListener(f,r),e.removeEventListener(l,r))};const L={isValid:!1,value:null};var U=e=>Array.isArray(e)?e.reduce(((e,r)=>r&&r.ref.checked?{isValid:!0,value:r.ref.value}:e),L):L,M=e=>\"radio\"===e.type,B=e=>\"file\"===e.type,I=e=>\"checkbox\"===e.type,W=e=>\"select-multiple\"===e.type;const J={value:!1,isValid:!1},q={value:!0,isValid:!0};var H=e=>{if(Array.isArray(e)){if(e.length>1){const r=e.filter((e=>e&&e.ref.checked)).map((({ref:{value:e}})=>e));return{value:r,isValid:!!r.length}}const{checked:r,value:t,attributes:n}=e[0].ref;return r?n&&!D(n.value)?D(t)||\"\"===t?q:{value:t,isValid:!0}:q:J}return J};function X(e,r,t,n,s){const c=e.current[r];if(c){const{ref:{value:e,disabled:r},ref:t,valueAsNumber:a,valueAsDate:u,setValueAs:o}=c;if(r&&n)return;return B(t)?t.files:M(t)?U(c.options).value:W(t)?(i=t.options,[...i].filter((({selected:e})=>e)).map((({value:e})=>e))):I(t)?H(c.options).value:s?e:a?\"\"===e?NaN:+e:u?t.valueAsDate:o?o(e):e}var i;if(t)return P(t.current,r)}function $(e){return!e||e instanceof HTMLElement&&e.nodeType!==Node.DOCUMENT_NODE&&$(e.parentNode)}var K=e=>V(e)&&!Object.keys(e).length,Y=e=>\"boolean\"===typeof e;function z(e,r){const t=S(r)?[r]:F(r),n=1==t.length?e:function(e,r){const t=r.slice(0,-1).length;let n=0;for(;n<t;)e=D(e)?n++:e[r[n++]];return e}(e,t),s=t[t.length-1];let c;n&&delete n[s];for(let i=0;i<t.slice(0,-1).length;i++){let r,n=-1;const s=t.slice(0,-(i+1)),a=s.length-1;for(i>0&&(c=e);++n<s.length;){const t=s[n];r=r?r[t]:e[t],a===n&&(V(r)&&K(r)||Array.isArray(r)&&!r.filter((e=>V(e)&&!K(e)||Y(e))).length)&&(c?delete c[t]:delete e[t]),c=r}}return e}const G=(e,r)=>e&&e.ref===r;var Q=e=>C(e)||!N(e);function Z(e,r){if(Q(e)||Q(r))return r;for(const n in r){const s=e[n],c=r[n];try{e[n]=V(s)&&V(c)||Array.isArray(s)&&Array.isArray(c)?Z(s,c):c}catch(t){}}return e}function ee(e,r,t){if(Q(e)||Q(r)||e instanceof Date||r instanceof Date)return e===r;if(!Object(u.isValidElement)(e)){const n=Object.keys(e),s=Object.keys(r);if(n.length!==s.length)return!1;for(const c of n){const n=e[c];if(!t||\"ref\"!==c){const e=r[c];if((V(n)||Array.isArray(n))&&(V(e)||Array.isArray(e))?!ee(n,e,t):n!==e)return!1}}}return!0}function re(e,r,t,n,s){let c=-1;for(;++c<e.length;){for(const n in e[c])Array.isArray(e[c][n])?(!t[c]&&(t[c]={}),t[c][n]=[],re(e[c][n],P(r[c]||{},n,[]),t[c][n],t[c],n)):ee(P(r[c]||{},n),e[c][n])?E(t[c]||{},n):t[c]=Object.assign(Object.assign({},t[c]),{[n]:!0});n&&!t.length&&delete n[s]}return t}var te=(e,r,t)=>Z(re(e,r,t.slice(0,e.length)),re(r,e,t.slice(0,e.length))),ne=e=>\"string\"===typeof e,se=(e,r,t,n,s)=>{const c={};for(const i in e.current)(D(s)||(ne(s)?i.startsWith(s):Array.isArray(s)&&s.find((e=>i.startsWith(e)))))&&(c[i]=X(e,i,void 0,n));return t?_(c):Z(r,_(c))},ce=e=>e instanceof RegExp,ie=e=>V(e)&&!ce(e)?e:{value:e,message:\"\"},ae=e=>\"function\"===typeof e,ue=e=>ne(e)||Object(u.isValidElement)(e);function oe(e,r,t=\"validate\"){if(ue(e)||Y(e)&&!e)return{type:t,message:ue(e)?e:\"\",ref:r}}var le=(e,r,t,n,s)=>r?Object.assign(Object.assign({},t[e]),{types:Object.assign(Object.assign({},t[e]&&t[e].types?t[e].types:{}),{[n]:s||!0})}):{},fe=async(e,r,{ref:t,ref:{value:n},options:s,required:c,maxLength:i,minLength:a,min:u,max:o,pattern:l,validate:f},d)=>{const b=t.name,p={},y=M(t),m=I(t),j=y||m,h=\"\"===n,N=le.bind(null,b,r,p),S=(e,r,n,s=g,c=w)=>{const i=e?r:n;p[b]=Object.assign({type:e?s:c,message:i,ref:t},N(e?s:c,i))};if(c&&(!y&&!m&&(h||C(n))||Y(n)&&!n||m&&!H(s).isValid||y&&!U(s).isValid)){const{value:n,message:s}=ue(c)?{value:!!c,message:c}:ie(c);if(n&&(p[b]=Object.assign({type:x,message:s,ref:j?((e.current[b].options||[])[0]||{}).ref:t},N(x,s)),!r))return p}if((!C(u)||!C(o))&&\"\"!==n){let e,s;const c=ie(o),i=ie(u);if(isNaN(n)){const r=t.valueAsDate||new Date(n);ne(c.value)&&(e=r>new Date(c.value)),ne(i.value)&&(s=r<new Date(i.value))}else{const r=t.valueAsNumber||parseFloat(n);C(c.value)||(e=r>c.value),C(i.value)||(s=r<i.value)}if((e||s)&&(S(!!e,c.message,i.message,O,v),!r))return p}if(ne(n)&&!h&&(i||a)){const e=ie(i),t=ie(a),s=!C(e.value)&&n.length>e.value,c=!C(t.value)&&n.length<t.value;if((s||c)&&(S(s,e.message,t.message),!r))return p}if(ne(n)&&l&&!h){const{value:e,message:s}=ie(l);if(ce(e)&&!e.test(n)&&(p[b]=Object.assign({type:k,message:s,ref:t},N(k,s)),!r))return p}if(f){const n=X(e,b,d,!1,!0),c=j&&s?s[0].ref:t;if(ae(f)){const e=oe(await f(n),c);if(e&&(p[b]=Object.assign(Object.assign({},e),N(A,e.message)),!r))return p}else if(V(f)){let e={};for(const[t,s]of Object.entries(f)){if(!K(e)&&!r)break;const i=oe(await s(n),c,t);i&&(e=Object.assign(Object.assign({},i),N(t,i.message)),r&&(p[b]=e))}if(!K(e)&&(p[b]=Object.assign({ref:c},e),!r))return p}}return p};const de=(e,r,t=[])=>{for(const n in r){const s=e+(V(r)?`.${n}`:`[${n}]`);Q(r[n])?t.push(s):de(s,r[n],t)}return t};var be=(e,r,t,n,s)=>{let c;return t.add(r),K(e)||(c=P(e,r),(V(c)||Array.isArray(c))&&de(r,c).forEach((e=>t.add(e)))),D(c)?s?n:P(n,r):c},pe=({isOnBlur:e,isOnChange:r,isOnTouch:t,isTouched:n,isReValidateOnBlur:s,isReValidateOnChange:c,isBlurEvent:i,isSubmitted:a,isOnAll:u})=>!u&&(!a&&t?!(n||i):(a?s:e)?!i:!(a?c:r)||i),ye=e=>e.substring(0,e.indexOf(\"[\"));const me=(e,r)=>RegExp(`^${r}([|.)\\\\d+`.replace(/\\[/g,\"\\\\[\").replace(/\\]/g,\"\\\\]\")).test(e);var je=(e,r)=>[...e].some((e=>me(r,e)));var he=typeof window!==h&&typeof document!==h;function Oe(e){var r;let t;if(Q(e)||he&&(e instanceof File||o(e)))return e;if(![\"Set\",\"Map\",\"Object\",\"Date\",\"Array\"].includes(null===(r=e.constructor)||void 0===r?void 0:r.name))return e;if(e instanceof Date)return t=new Date(e.getTime()),t;if(e instanceof Set){t=new Set;for(const r of e)t.add(r);return t}if(e instanceof Map){t=new Map;for(const r of e.keys())t.set(r,Oe(e.get(r)));return t}t=Array.isArray(e)?[]:{};for(const n in e)t[n]=Oe(e[n]);return t}var ve=e=>({isOnSubmit:!e||e===y,isOnBlur:e===b,isOnChange:e===p,isOnAll:e===j,isOnTouch:e===m}),ge=e=>M(e)||I(e);const we=typeof window===h,ke=he?\"Proxy\"in window:typeof Proxy!==h;function xe({mode:e=y,reValidateMode:r=p,resolver:t,context:n,defaultValues:s={},shouldFocusError:c=!0,shouldUnregister:i=!0,criteriaMode:a}={}){const b=Object(u.useRef)({}),m=Object(u.useRef)({}),h=Object(u.useRef)({}),O=Object(u.useRef)(new Set),v=Object(u.useRef)({}),g=Object(u.useRef)({}),w=Object(u.useRef)({}),k=Object(u.useRef)({}),x=Object(u.useRef)(s),A=Object(u.useRef)(!1),N=Object(u.useRef)(!1),F=Object(u.useRef)(),L=Object(u.useRef)({}),U=Object(u.useRef)({}),J=Object(u.useRef)(n),q=Object(u.useRef)(t),H=Object(u.useRef)(new Set),Y=Object(u.useRef)(ve(e)),{isOnSubmit:Z,isOnTouch:re}=Y.current,ce=a===j,[ie,ue]=Object(u.useState)({isDirty:!1,isValidating:!1,dirtyFields:{},isSubmitted:!1,submitCount:0,touched:{},isSubmitting:!1,isSubmitSuccessful:!1,isValid:!Z,errors:{}}),oe=Object(u.useRef)({isDirty:!ke,dirtyFields:!ke,touched:!ke||re,isValidating:!ke,isSubmitting:!ke,isValid:!ke}),le=Object(u.useRef)(ie),me=Object(u.useRef)(),{isOnBlur:xe,isOnChange:Ae}=Object(u.useRef)(ve(r)).current;J.current=n,q.current=t,le.current=ie,L.current=i?{}:K(L.current)?Oe(s):L.current;const Ce=Object(u.useCallback)(((e={})=>{A.current||(le.current=Object.assign(Object.assign({},le.current),e),ue(le.current))}),[]),Ne=()=>oe.current.isValidating&&Ce({isValidating:!0}),Ve=Object(u.useCallback)(((e,r,t=!1,n={},s)=>{let c=t||(({errors:e,name:r,error:t,validFields:n,fieldsWithValidation:s})=>{const c=D(t),i=P(e,r);return c&&!!i||!c&&!ee(i,t,!0)||c&&P(s,r)&&!P(n,r)})({errors:le.current.errors,error:r,name:e,validFields:k.current,fieldsWithValidation:w.current});const i=P(le.current.errors,e);r?(z(k.current,e),c=c||!i||!ee(i,r,!0),E(le.current.errors,e,r)):((P(w.current,e)||q.current)&&(E(k.current,e,!0),c=c||i),z(le.current.errors,e)),(c&&!C(t)||!K(n)||oe.current.isValidating)&&Ce(Object.assign(Object.assign(Object.assign({},n),q.current?{isValid:!!s}:{}),{isValidating:!1}))}),[]),Se=Object(u.useCallback)(((e,r)=>{const{ref:t,options:n}=b.current[e],s=he&&o(t)&&C(r)?\"\":r;M(t)?(n||[]).forEach((({ref:e})=>e.checked=e.value===s)):B(t)&&!ne(s)?t.files=s:W(t)?[...t.options].forEach((e=>e.selected=s.includes(e.value))):I(t)&&n?n.length>1?n.forEach((({ref:e})=>e.checked=Array.isArray(s)?!!s.find((r=>r===e.value)):s===e.value)):n[0].ref.checked=!!s:t.value=s}),[]),Re=Object(u.useCallback)(((e,r)=>{if(oe.current.isDirty){const t=Be();return e&&r&&E(t,e,r),!ee(t,x.current)}return!1}),[]),Fe=Object(u.useCallback)(((e,r=!0)=>{if(oe.current.isDirty||oe.current.dirtyFields){const t=!ee(P(x.current,e),X(b,e,L)),n=P(le.current.dirtyFields,e),s=le.current.isDirty;t?E(le.current.dirtyFields,e,!0):z(le.current.dirtyFields,e);const c={isDirty:Re(),dirtyFields:le.current.dirtyFields},i=oe.current.isDirty&&s!==c.isDirty||oe.current.dirtyFields&&n!==P(le.current.dirtyFields,e);return i&&r&&Ce(c),i?c:{}}return{}}),[]),Ee=Object(u.useCallback)((async(e,r)=>{const t=(await fe(b,ce,b.current[e],L))[e];return Ve(e,t,r),D(t)}),[Ve,ce]),_e=Object(u.useCallback)((async e=>{const{errors:r}=await q.current(Be(),J.current,ce),t=le.current.isValid;if(Array.isArray(e)){const t=e.map((e=>{const t=P(r,e);return t?E(le.current.errors,e,t):z(le.current.errors,e),!t})).every(Boolean);return Ce({isValid:K(r),isValidating:!1}),t}{const n=P(r,e);return Ve(e,n,t!==K(r),{},K(r)),!n}}),[Ve,ce]),De=Object(u.useCallback)((async e=>{const r=e||Object.keys(b.current);if(Ne(),q.current)return _e(r);if(Array.isArray(r)){!e&&(le.current.errors={});const t=await Promise.all(r.map((async e=>await Ee(e,null))));return Ce({isValidating:!1}),t.every(Boolean)}return await Ee(r)}),[_e,Ee]),Pe=Object(u.useCallback)(((e,r,{shouldDirty:t,shouldValidate:n})=>{const s={};E(s,e,r);for(const c of de(e,r))b.current[c]&&(Se(c,P(s,c)),t&&Fe(c),n&&De(c))}),[De,Se,Fe]),Te=Object(u.useCallback)(((e,r,t)=>{if(!i&&!Q(r)&&E(L.current,e,Array.isArray(r)?[...r]:Object.assign({},r)),b.current[e])Se(e,r),t.shouldDirty&&Fe(e),t.shouldValidate&&De(e);else if(!Q(r)&&(Pe(e,r,t),H.current.has(e))){const n=ye(e)||e;E(m.current,e,r),U.current[n]({[n]:P(m.current,n)}),(oe.current.isDirty||oe.current.dirtyFields)&&t.shouldDirty&&(E(le.current.dirtyFields,e,te(r,P(x.current,e,[]),P(le.current.dirtyFields,e,[]))),Ce({isDirty:!ee(Object.assign(Object.assign({},Be()),{[e]:r}),x.current)}))}!i&&E(L.current,e,r)}),[Fe,Se,Pe]),Le=e=>N.current||O.current.has(e)||O.current.has((e.match(/\\w+/)||[])[0]),Ue=e=>{let r=!0;if(!K(v.current))for(const t in v.current)e&&v.current[t].size&&!v.current[t].has(e)&&!v.current[t].has(ye(e))||(g.current[t](),r=!1);return r};function Me(e){if(!i){let r=Oe(e);for(const e of H.current)S(e)&&!r[e]&&(r=Object.assign(Object.assign({},r),{[e]:[]}));return r}return e}function Be(e){if(ne(e))return X(b,e,L);if(Array.isArray(e)){const r={};for(const t of e)E(r,t,X(b,t,L));return r}return Me(se(b,Oe(L.current),i))}F.current=F.current?F.current:async({type:e,target:r})=>{let t=r.name;const n=b.current[t];let s,c;if(n){const a=e===l,u=pe(Object.assign({isBlurEvent:a,isReValidateOnChange:Ae,isReValidateOnBlur:xe,isTouched:!!P(le.current.touched,t),isSubmitted:le.current.isSubmitted},Y.current));let o=Fe(t,!1),f=!K(o)||!a&&Le(t);if(a&&!P(le.current.touched,t)&&oe.current.touched&&(E(le.current.touched,t,!0),o=Object.assign(Object.assign({},o),{touched:le.current.touched})),!i&&I(r)&&E(L.current,t,X(b,t)),u)return!a&&Ue(t),(!K(o)||f&&K(o))&&Ce(o);if(Ne(),q.current){const{errors:e}=await q.current(Be(),J.current,ce),n=le.current.isValid;if(s=P(e,t),I(r)&&!s&&q.current){const r=ye(t),n=P(e,r,{});n.type&&n.message&&(s=n),r&&(n||P(le.current.errors,r))&&(t=r)}c=K(e),n!==c&&(f=!0)}else s=(await fe(b,ce,n,L))[t];!a&&Ue(t),Ve(t,s,f,o,c)}};const Ie=Object(u.useCallback)((async(e={})=>{const r=K(b.current)?x.current:{},{errors:t}=await q.current(Object.assign(Object.assign(Object.assign({},r),Be()),e),J.current,ce)||{},n=K(t);le.current.isValid!==n&&Ce({isValid:n})}),[ce]),We=Object(u.useCallback)(((e,r)=>{!function(e,r,t,n,s,c){const{ref:i,ref:{name:a}}=t,u=e.current[a];if(!s){const r=X(e,a,n);!D(r)&&E(n.current,a,r)}i.type&&u?M(i)||I(i)?Array.isArray(u.options)&&u.options.length?(R(u.options).forEach(((e={},t)=>{($(e.ref)&&G(e,e.ref)||c)&&(T(e.ref,r),z(u.options,`[${t}]`))})),u.options&&!R(u.options).length&&delete e.current[a]):delete e.current[a]:($(i)&&G(u,i)||c)&&(T(i,r),delete e.current[a]):delete e.current[a]}(b,F.current,e,L,i,r),i&&(z(k.current,e.ref.name),z(w.current,e.ref.name))}),[i]),Je=Object(u.useCallback)((e=>{if(N.current)Ce();else{for(const r of O.current)if(r.startsWith(e)){Ce();break}Ue(e)}}),[]),qe=Object(u.useCallback)(((e,r)=>{e&&(We(e,r),i&&!R(e.options||[]).length&&(z(le.current.errors,e.ref.name),E(le.current.dirtyFields,e.ref.name,!0),Ce({isDirty:Re()}),oe.current.isValid&&q.current&&Ie(),Je(e.ref.name)))}),[Ie,We]);const He=Object(u.useCallback)(((e,r,t)=>{const n=t?v.current[t]:O.current;let s=se(b,Oe(L.current),i,!1,e);if(ne(e)){const t=ye(e)||e;return H.current.has(t)&&(s=Object.assign(Object.assign({},h.current),s)),be(s,e,n,D(P(x.current,e))?r:P(x.current,e),!0)}const c=D(r)?x.current:r;return Array.isArray(e)?e.reduce(((e,r)=>Object.assign(Object.assign({},e),{[r]:be(s,r,n,c)})),{}):(N.current=D(t),_(!K(s)&&s||c))}),[]);function Xe(e,r={}){const{name:t,type:n,value:s}=e,c=Object.assign({ref:e},r),a=b.current,u=ge(e),p=je(H.current,t),y=r=>he&&(!o(e)||r===e);let m,j=a[t],h=!0;if(j&&(u?Array.isArray(j.options)&&R(j.options).find((e=>s===e.ref.value&&y(e.ref))):y(j.ref)))return void(a[t]=Object.assign(Object.assign({},j),r));j=n?u?Object.assign({options:[...R(j&&j.options||[]),{ref:e}],ref:{type:n,name:t}},r):Object.assign({},c):c,a[t]=j;const O=D(P(L.current,t));K(x.current)&&O||(m=P(O?x.current:L.current,t),h=D(m),h||p||Se(t,m)),K(r)||(E(w.current,t,!0),!Z&&oe.current.isValid&&fe(b,ce,j,L).then((e=>{const r=le.current.isValid;K(e)?E(k.current,t,!0):z(k.current,t),r!==K(e)&&Ce()}))),!i||p&&h||!p&&z(le.current.dirtyFields,t),n&&function({ref:e},r,t){o(e)&&t&&(e.addEventListener(r?f:d,t),e.addEventListener(l,t))}(u&&j.options?j.options[j.options.length-1]:j,u||\"select-one\"===e.type,F.current)}const $e=Object(u.useCallback)(((e,r)=>async t=>{t&&t.preventDefault&&(t.preventDefault(),t.persist());let n={},s=Me(se(b,Oe(L.current),i,!0));oe.current.isSubmitting&&Ce({isSubmitting:!0});try{if(q.current){const{errors:e,values:r}=await q.current(s,J.current,ce);le.current.errors=n=e,s=r}else for(const e of Object.values(b.current))if(e){const{name:r}=e.ref,t=await fe(b,ce,e,L);t[r]?(E(n,r,t[r]),z(k.current,r)):P(w.current,r)&&(z(le.current.errors,r),E(k.current,r,!0))}K(n)&&Object.keys(le.current.errors).every((e=>e in b.current))?(Ce({errors:{},isSubmitting:!0}),await e(s,t)):(le.current.errors=Object.assign(Object.assign({},le.current.errors),n),r&&await r(le.current.errors,t),c&&((e,r)=>{for(const t in e)if(P(r,t)){const r=e[t];if(r){if(r.ref.focus&&D(r.ref.focus()))break;if(r.options){r.options[0].ref.focus();break}}}})(b.current,le.current.errors))}finally{le.current.isSubmitting=!1,Ce({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:K(le.current.errors),submitCount:le.current.submitCount+1})}}),[c,ce]);Object(u.useEffect)((()=>{t&&oe.current.isValid&&Ie(),me.current=me.current||!he?me.current:function(e,r){const t=new MutationObserver((()=>{for(const t of Object.values(e.current))if(t&&t.options)for(const e of t.options)e&&e.ref&&$(e.ref)&&r(t);else t&&$(t.ref)&&r(t)}));return t.observe(window.document,{childList:!0,subtree:!0}),t}(b,qe)}),[qe,x.current]),Object(u.useEffect)((()=>()=>{me.current&&me.current.disconnect(),A.current=!0,Object.values(b.current).forEach((e=>qe(e,!0)))}),[]),!t&&oe.current.isValid&&(ie.isValid=ee(k.current,w.current)&&K(le.current.errors));const Ke={trigger:De,setValue:Object(u.useCallback)((function(e,r,t){Te(e,r,t||{}),Le(e)&&Ce(),Ue(e)}),[Te,De]),getValues:Object(u.useCallback)(Be,[]),register:Object(u.useCallback)((function(e,r){if(!we)if(ne(e))Xe({name:e},r);else{if(!V(e)||!(\"name\"in e))return r=>r&&Xe(r,e);Xe(e,r)}}),[x.current]),unregister:Object(u.useCallback)((function(e){for(const r of Array.isArray(e)?e:[e])qe(b.current[r],!0)}),[]),formState:ke?new Proxy(ie,{get:(e,r)=>{if(r in e)return oe.current[r]=!0,e[r]}}):ie},Ye=Object(u.useMemo)((()=>Object.assign({isFormDirty:Re,updateWatchedValue:Je,shouldUnregister:i,updateFormState:Ce,removeFieldEventListener:We,watchInternal:He,mode:Y.current,reValidateMode:{isReValidateOnBlur:xe,isReValidateOnChange:Ae},validateResolver:t?Ie:void 0,fieldsRef:b,resetFieldArrayFunctionRef:U,useWatchFieldsRef:v,useWatchRenderFunctionsRef:g,fieldArrayDefaultValuesRef:m,validFieldsRef:k,fieldsWithValidationRef:w,fieldArrayNamesRef:H,readFormStateRef:oe,formStateRef:le,defaultValuesRef:x,shallowFieldsStateRef:L,fieldArrayValuesRef:h},Ke)),[x.current,Je,i,We,He]);return Object.assign({watch:function(e,r){return He(e,r)},control:Ye,handleSubmit:$e,reset:Object(u.useCallback)(((e,r={})=>{if(he)for(const n of Object.values(b.current))if(n){const{ref:e,options:r}=n,s=ge(e)&&Array.isArray(r)?r[0].ref:e;if(o(s))try{s.closest(\"form\").reset();break}catch(t){}}b.current={},x.current=Object.assign({},e||x.current),e&&Ue(\"\"),Object.values(U.current).forEach((e=>ae(e)&&e())),L.current=i?{}:Oe(e||x.current),(({errors:e,isDirty:r,isSubmitted:t,touched:n,isValid:s,submitCount:c,dirtyFields:i})=>{s||(k.current={},w.current={}),m.current={},O.current=new Set,N.current=!1,Ce({submitCount:c?le.current.submitCount:0,isDirty:!!r&&le.current.isDirty,isSubmitted:!!t&&le.current.isSubmitted,isValid:!!s&&le.current.isValid,dirtyFields:i?le.current.dirtyFields:{},touched:n?le.current.touched:{},errors:e?le.current.errors:{},isSubmitting:!1,isSubmitSuccessful:!1})})(r)}),[]),clearErrors:Object(u.useCallback)((function(e){e&&(Array.isArray(e)?e:[e]).forEach((e=>b.current[e]&&S(e)?delete le.current.errors[e]:z(le.current.errors,e))),Ce({errors:e?le.current.errors:{}})}),[]),setError:Object(u.useCallback)((function(e,r){const t=(b.current[e]||{}).ref;E(le.current.errors,e,Object.assign(Object.assign({},r),{ref:t})),Ce({isValid:!1}),r.shouldFocus&&t&&t.focus&&t.focus()}),[]),errors:ie.errors},Ke)}const Ae=Object(u.createContext)(null);Ae.displayName=\"RHFContext\";var Ce=t(\"HTVX\"),Ne=function(e){return Object.keys(e).map((function(r){return{value:e[r],information:Ve(r)}}))},Ve=function(e){return e.toLowerCase().replace(/\\w/,(function(e){return e.toUpperCase()}))};function Se(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function Re(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Se(Object(t),!0).forEach((function(r){Object(s.a)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Se(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}r.default=function(){var e=Object(u.useRef)(),r=Object(u.useState)([]),t=r[0],s=r[1],c=xe(),o=c.register,l=(c.errors,c.handleSubmit),f={filename:\"process-background.csv\",headers:[{label:\"Information\",key:\"information\"},{label:\"Value\",key:\"value\"}],data:t},d=function(){var r=Object(a.a)(i.a.mark((function r(t){var n;return i.a.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=Ne(t),r.next=3,s(n);case 3:e.current.link.click(),console.log({array:n});case 5:case\"end\":return r.stop()}}),r)})));return function(e){return r.apply(this,arguments)}}();return Object(n.jsx)(n.Fragment,{children:Object(n.jsx)(\"section\",{className:\"process-bg\",children:Object(n.jsx)(\"div\",{className:\"container\",children:Object(n.jsxs)(\"div\",{className:\"container\",children:[Object(n.jsx)(\"div\",{className:\"row\",children:Object(n.jsx)(\"div\",{className:\"col-12\",children:Object(n.jsx)(\"h1\",{children:\"Process Background Information\"})})}),Object(n.jsx)(\"div\",{className:\"row\",children:Object(n.jsxs)(\"div\",{className:\"col-12\",children:[Object(n.jsxs)(\"form\",{onSubmit:l(d),children:[Object(n.jsxs)(\"div\",{className:\"row\",children:[Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mb-2\",children:Object(n.jsx)(\"p\",{className:\"thead pl-3\",children:\"Information\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 pr-sm-0 mb-2\",children:Object(n.jsx)(\"p\",{className:\"thead pl-3\",children:\"Value\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Title\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"title\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Doc_Num\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"doc_num\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Purpose\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"purpose\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Scope\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"scope\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Accountability\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"accountability\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Responsibility\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"responsibility\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"References\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"references\",placeholder:\"User inputs\"})}),Object(n.jsx)(\"div\",{className:\"col-md-3 pr-sm-0 mt-2\",children:Object(n.jsx)(\"p\",{className:\"thead bg-green pl-3\",children:\"Definitions\"})}),Object(n.jsx)(\"div\",{className:\"col-md-7 pl-sm-2 mt-2\",children:Object(n.jsx)(\"input\",{ref:o(),className:\"input-field\",type:\"text\",name:\"definitions\",placeholder:\"User inputs\"})})]}),Object(n.jsx)(\"div\",{className:\"text-center\",children:Object(n.jsx)(\"button\",{button:\"submit\",className:\"btn btn-green mt-4\",children:\"Export to data frame\"})})]}),Object(n.jsx)(Ce.CSVLink,Re(Re({className:\"d-none\",ref:e},f),{},{children:\"Export\"}))]})})]})})})})}},rg98:function(e,r,t){\"use strict\";function n(e,r,t,n,s,c,i){try{var a=e[c](i),u=a.value}catch(o){return void t(o)}a.done?r(u):Promise.resolve(u).then(n,s)}function s(e){return function(){var r=this,t=arguments;return new Promise((function(s,c){var i=e.apply(r,t);function a(e){n(i,s,c,a,u,\"next\",e)}function u(e){n(i,s,c,a,u,\"throw\",e)}a(void 0)}))}}t.d(r,\"a\",(function(){return s}))}},[[\"6TX+\",0,2,1]]]);","map":{"version":3,"sources":["static/chunks/pages/process-background-information-186eee05de1291d0b559.js"],"names":["_N_E","window","push","3m5b","module","exports","__webpack_require__","Object","defineProperty","value","obj","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_react2","__esModule","default","_core","_metaProps","CSVLink","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","buildURI","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","apply","undefined","event","isAsync","navigator","msSaveOrOpenBlob","preventDefault","_props","data","headers","separator","filename","enclosingCharacter","uFEFF","csvData","blob","Blob","toCSV","msSaveBlob","_this2","onClick","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","children","rest","keys","indexOf","_objectWithoutProperties","href","createElement","download","ref","link","handleClick","Component","defaultProps","propTypes","6TX+","__NEXT_P","81e5","PropsNotForwarded","_propTypes","oneOfType","string","array","func","isRequired","bool","HTVX","NJJe","_typeof","Symbol","iterator","_toConsumableArray","arr","Array","isArray","arr2","from","isSafari","test","userAgent","isJsons","every","row","isArrays","jsonsHeaders","map","json","reduce","a","b","Set","concat","jsons2arrays","jsons","headerLabels","headerKeys","header","label","object","getHeaderValue","property","foundValue","replace","split","o","p","splice","elementOrEmpty","element","joiner","filter","e","column","join","arrays2csv","jsons2csv","string2csv","csv","type","dataURI","URL","webkitURL","createObjectURL","SBul","CSVDownload","_Download2","_interopRequireDefault","_Link2","YDre","state","specs","page","open","cpVT","__webpack_exports__","_defineProperty","d","nW/x","r","jsx_runtime","regenerator","regenerator_default","n","asyncToGenerator","react","isHTMLElement","HTMLElement","EVENTS","VALIDATION_MODE","UNDEFINED","INPUT_VALIDATION_RULES","isNullOrUndefined","isObjectType","isObject","Date","isKey","compact","Boolean","stringToPath","input","set","path","index","tempPath","lastIndex","newValue","objValue","isNaN","transformToNestObject","isUndefined","val","get","defaultValue","result","removeAllEventListeners","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","getRadioValue","options","previous","option","checked","isRadioInput","isFileInput","isCheckBoxInput","isMultipleSelect","defaultResult","validResult","getCheckboxValue","values","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","shouldKeepRawValue","field","current","disabled","valueAsNumber","valueAsDate","setValueAs","files","selected","NaN","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","isEmptyObject","isBoolean","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isSameRef","fieldValue","isPrimitive","deepMerge","targetValue","sourceValue","_a","deepEqual","object1","object2","isErrorObject","keys1","keys2","val1","val2","setDirtyFields","defaultValues","dirtyFields","parentName","[object Object]","setFieldArrayDirtyFields","isString","getFieldsValues","shallowFieldsState","shouldUnregister","search","output","startsWith","find","isRegex","RegExp","getValueAndMessage","validationData","message","isFunction","isMessage","getValidateError","appendErrors","validateAllFieldCriteria","errors","types","validateField","async","required","maxLength","minLength","min","max","pattern","validate","error","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","validateRef","validateError","validationResult","validateFunction","entries","getPath","rootPath","paths","rootName","assignWatchFields","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","forEach","skipValidation","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","getFieldArrayParentName","substring","isMatchFieldArrayName","searchName","isNameInFieldArray","names","some","isWeb","document","cloneObject","copy","File","includes","getTime","Map","modeChecker","mode","isOnSubmit","isRadioOrCheckboxFunction","isWindowUndefined","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","shouldFocusError","criteriaMode","fieldArrayDefaultValuesRef","fieldArrayValuesRef","watchFieldsRef","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","isValidateAllFieldCriteria","formState","setFormState","isDirty","isValidating","submitCount","touched","isSubmitting","isSubmitSuccessful","readFormStateRef","formStateRef","observerRef","updateFormState","updateIsValidating","shouldRenderBaseOnError","shouldRender","shouldReRender","validFields","fieldsWithValidation","previousError","isErrorStateChanged","setFieldValue","rawValue","radioRef","selectRef","checkboxRef","isFormDirty","formValues","getValues","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","skipReRender","executeSchemaOrResolverValidation","previousFormIsValid","isInputsValid","trigger","fields","Promise","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","has","isFieldWatched","match","renderWatchedInputs","found","size","setFieldArrayDefaultValues","payload","shouldSkipValidation","parentNodeName","currentError","validateResolver","newDefaultValues","removeFieldEventListener","forceDelete","handleChange","fieldRef","findRemovedFieldAndRemoveListener","updateWatchedValue","watchField","removeFieldEventListenerAndRef","watchInternal","fieldNames","watchId","combinedDefaultValues","registerFieldRef","fieldRefAndValidationOptions","isFieldArray","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","shouldAttachChangeEvent","addEventListener","attachEventListeners","handleSubmit","onValid","onInvalid","persist","fieldErrors","fieldError","focus","focusOnErrorField","observer","MutationObserver","observe","childList","subtree","onDomRemove","disconnect","commonProps","setValue","register","refOrRegisterOptions","unregister","prop","control","watch","reset","omitResetState","inputRef","closest","resetFieldArray","resetRefs","clearErrors","inputName","setError","shouldFocus","FormContext","displayName","react_csv","convertObjectToArray","information","capitalize","word","toLowerCase","firstLetter","toUpperCase","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","btnRef","_useState","setCsvData","_useForm","csvReport","exportBackgroundInformation","_ref","mark","_callee","wrap","_context","prev","next","click","console","log","stop","_x","className","onSubmit","placeholder","button","rg98","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","_asyncToGenerator","fn","args","err"],"mappings":"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"},"name":"static/chunks/pages/process-background-information-186eee05de1291d0b559.js","input":"_N_E =\n(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[9],{\n\n/***/ \"3m5b\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(\"q1tI\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = __webpack_require__(\"NJJe\");\n\nvar _metaProps = __webpack_require__(\"81e5\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;\n\n/***/ }),\n\n/***/ \"6TX+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/process-background-information\",\n        function () {\n          return __webpack_require__(\"nW/x\");\n        }\n      ]);\n    \n\n/***/ }),\n\n/***/ \"81e5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = __webpack_require__(\"q1tI\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(\"17x9\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];\n\n/***/ }),\n\n/***/ \"HTVX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(\"SBul\");\n\n\n/***/ }),\n\n/***/ \"NJJe\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};\n\n/***/ }),\n\n/***/ \"SBul\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = __webpack_require__(\"YDre\");\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = __webpack_require__(\"3m5b\");\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;\n\n/***/ }),\n\n/***/ \"YDre\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(\"q1tI\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = __webpack_require__(\"NJJe\");\n\nvar _metaProps = __webpack_require__(\"81e5\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;\n\n/***/ }),\n\n/***/ \"cpVT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _defineProperty; });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n/***/ }),\n\n/***/ \"nW/x\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"nKUr\");\n\n// EXTERNAL MODULE: ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(\"cpVT\");\n\n// EXTERNAL MODULE: ./node_modules/next/node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(\"vJKn\");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// EXTERNAL MODULE: ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(\"rg98\");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\n\n// CONCATENATED MODULE: ./node_modules/react-hook-form/dist/index.esm.js\n\n\nvar isHTMLElement = (value) => value instanceof HTMLElement;\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst SELECT = 'select';\r\nconst UNDEFINED = 'undefined';\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nfunction attachEventListeners({ ref }, shouldAttachChangeEvent, handleChange) {\r\n    if (isHTMLElement(ref) && handleChange) {\r\n        ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !(value instanceof Date);\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar compact = (value) => value.filter(Boolean);\n\nvar stringToPath = (input) => compact(input\r\n    .replace(/[\"|']/g, '')\r\n    .replace(/\\[/g, '.')\r\n    .replace(/\\]/g, '')\r\n    .split('.'));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data, value = {}) => {\r\n    for (const key in data) {\r\n        !isKey(key) ? set(value, key, data[key]) : (value[key] = data[key]);\r\n    }\r\n    return value;\r\n};\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj = {}, path, defaultValue) => {\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nvar focusOnErrorField = (fields, fieldErrors) => {\r\n    for (const key in fields) {\r\n        if (get(fieldErrors, key)) {\r\n            const field = fields[key];\r\n            if (field) {\r\n                if (field.ref.focus && isUndefined(field.ref.focus())) {\r\n                    break;\r\n                }\r\n                else if (field.options) {\r\n                    field.options[0].ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (isHTMLElement(ref) && ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.ref.checked\r\n        ? {\r\n            isValid: true,\r\n            value: option.ref.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isMultipleSelect = (element) => element.type === `${SELECT}-multiple`;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.ref.checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || value === ''\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fieldsRef, name, shallowFieldsStateRef, excludeDisabled, shouldKeepRawValue) {\r\n    const field = fieldsRef.current[name];\r\n    if (field) {\r\n        const { ref: { value, disabled }, ref, valueAsNumber, valueAsDate, setValueAs, } = field;\r\n        if (disabled && excludeDisabled) {\r\n            return;\r\n        }\r\n        if (isFileInput(ref)) {\r\n            return ref.files;\r\n        }\r\n        if (isRadioInput(ref)) {\r\n            return getRadioValue(field.options).value;\r\n        }\r\n        if (isMultipleSelect(ref)) {\r\n            return getMultipleSelectValue(ref.options);\r\n        }\r\n        if (isCheckBoxInput(ref)) {\r\n            return getCheckboxValue(field.options).value;\r\n        }\r\n        return shouldKeepRawValue\r\n            ? value\r\n            : valueAsNumber\r\n                ? value === ''\r\n                    ? NaN\r\n                    : +value\r\n                : valueAsDate\r\n                    ? ref.valueAsDate\r\n                    : setValueAs\r\n                        ? setValueAs(value)\r\n                        : value;\r\n    }\r\n    if (shallowFieldsStateRef) {\r\n        return get(shallowFieldsStateRef.current, name);\r\n    }\r\n}\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) &&\r\n                        !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nconst isSameRef = (fieldValue, ref) => fieldValue && fieldValue.ref === ref;\r\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, shallowFieldsStateRef, shouldUnregister, forceDelete) {\r\n    const { ref, ref: { name }, } = field;\r\n    const fieldRef = fieldsRef.current[name];\r\n    if (!shouldUnregister) {\r\n        const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\r\n        !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\r\n    }\r\n    if (!ref.type || !fieldRef) {\r\n        delete fieldsRef.current[name];\r\n        return;\r\n    }\r\n    if (isRadioInput(ref) || isCheckBoxInput(ref)) {\r\n        if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\r\n            compact(fieldRef.options).forEach((option = {}, index) => {\r\n                if ((isDetached(option.ref) && isSameRef(option, option.ref)) ||\r\n                    forceDelete) {\r\n                    removeAllEventListeners(option.ref, handleChange);\r\n                    unset(fieldRef.options, `[${index}]`);\r\n                }\r\n            });\r\n            if (fieldRef.options && !compact(fieldRef.options).length) {\r\n                delete fieldsRef.current[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fieldsRef.current[name];\r\n        }\r\n    }\r\n    else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        delete fieldsRef.current[name];\r\n    }\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepMerge(target, source) {\r\n    if (isPrimitive(target) || isPrimitive(source)) {\r\n        return source;\r\n    }\r\n    for (const key in source) {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n        try {\r\n            target[key] =\r\n                (isObject(targetValue) && isObject(sourceValue)) ||\r\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\r\n                    ? deepMerge(targetValue, sourceValue)\r\n                    : sourceValue;\r\n        }\r\n        catch (_a) { }\r\n    }\r\n    return target;\r\n}\n\nfunction deepEqual(object1, object2, isErrorObject) {\r\n    if (isPrimitive(object1) ||\r\n        isPrimitive(object2) ||\r\n        object1 instanceof Date ||\r\n        object2 instanceof Date) {\r\n        return object1 === object2;\r\n    }\r\n    if (!Object(react[\"isValidElement\"])(object1)) {\r\n        const keys1 = Object.keys(object1);\r\n        const keys2 = Object.keys(object2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n        for (const key of keys1) {\r\n            const val1 = object1[key];\r\n            if (!(isErrorObject && key === 'ref')) {\r\n                const val2 = object2[key];\r\n                if ((isObject(val1) || Array.isArray(val1)) &&\r\n                    (isObject(val2) || Array.isArray(val2))\r\n                    ? !deepEqual(val1, val2, isErrorObject)\r\n                    : val1 !== val2) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\r\n    let index = -1;\r\n    while (++index < values.length) {\r\n        for (const key in values[index]) {\r\n            if (Array.isArray(values[index][key])) {\r\n                !dirtyFields[index] && (dirtyFields[index] = {});\r\n                dirtyFields[index][key] = [];\r\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\r\n            }\r\n            else {\r\n                deepEqual(get(defaultValues[index] || {}, key), values[index][key])\r\n                    ? set(dirtyFields[index] || {}, key)\r\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\r\n            }\r\n        }\r\n        parentNode &&\r\n            !dirtyFields.length &&\r\n            delete parentNode[parentName];\r\n    }\r\n    return dirtyFields;\r\n}\r\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n\nvar isString = (value) => typeof value === 'string';\n\nvar getFieldsValues = (fieldsRef, shallowFieldsState, shouldUnregister, excludeDisabled, search) => {\r\n    const output = {};\r\n    for (const name in fieldsRef.current) {\r\n        if (isUndefined(search) ||\r\n            (isString(search)\r\n                ? name.startsWith(search)\r\n                : Array.isArray(search) && search.find((data) => name.startsWith(data)))) {\r\n            output[name] = getFieldValue(fieldsRef, name, undefined, excludeDisabled);\r\n        }\r\n    }\r\n    return shouldUnregister\r\n        ? transformToNestObject(output)\r\n        : deepMerge(shallowFieldsState, transformToNestObject(output));\r\n};\n\nvar isErrorStateChanged = ({ errors, name, error, validFields, fieldsWithValidation, }) => {\r\n    const isValid = isUndefined(error);\r\n    const previousError = get(errors, name);\r\n    return ((isValid && !!previousError) ||\r\n        (!isValid && !deepEqual(previousError, error, true)) ||\r\n        (isValid && get(fieldsWithValidation, name) && !get(validFields, name)));\r\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isMessage = (value) => isString(value) || Object(react[\"isValidElement\"])(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) || (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { value }, options, required, maxLength, minLength, min, max, pattern, validate, }, shallowFieldsStateRef) => {\r\n    const name = ref.name;\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = value === '';\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: isRadioOrCheckbox\r\n                    ? ((fieldsRef.current[name].options || [])[0] || {}).ref\r\n                    : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '') {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNaN(value)) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(value);\r\n            if (isString(maxOutput.value)) {\r\n                exceedMax = valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value)) {\r\n                exceedMin = valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            value.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            value.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && pattern && !isEmpty) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\r\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef, false, true);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const [key, validateFunction] of Object.entries(validate)) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateResult = await validateFunction(fieldValue);\r\n                const validateError = getValidateError(validateResult, validateRef, key);\r\n                if (validateError) {\r\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nconst getPath = (rootPath, values, paths = []) => {\r\n    for (const property in values) {\r\n        const rootName = (rootPath +\r\n            (isObject(values)\r\n                ? `.${property}`\r\n                : `[${property}]`));\r\n        isPrimitive(values[property])\r\n            ? paths.push(rootName)\r\n            : getPath(rootName, values[property], paths);\r\n    }\r\n    return paths;\r\n};\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, inputValue, isSingleField) => {\r\n    let value = undefined;\r\n    watchFields.add(fieldName);\r\n    if (!isEmptyObject(fieldValues)) {\r\n        value = get(fieldValues, fieldName);\r\n        if (isObject(value) || Array.isArray(value)) {\r\n            getPath(fieldName, value).forEach((name) => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isSingleField\r\n            ? inputValue\r\n            : get(inputValue, fieldName)\r\n        : value;\r\n};\n\nvar skipValidation = ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\r\n    if (isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? isReValidateOnChange : isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar getFieldArrayParentName = (name) => name.substring(0, name.indexOf('['));\n\nconst isMatchFieldArrayName = (name, searchName) => RegExp(`^${searchName}([|.)\\\\d+`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\r\nvar isNameInFieldArray = (names, name) => [...names].some((current) => isMatchFieldArrayName(name, current));\n\nvar isSelectInput = (element) => element.type === `${SELECT}-one`;\n\nfunction onDomRemove(fieldsRef, removeFieldEventListenerAndRef) {\r\n    const observer = new MutationObserver(() => {\r\n        for (const field of Object.values(fieldsRef.current)) {\r\n            if (field && field.options) {\r\n                for (const option of field.options) {\r\n                    if (option && option.ref && isDetached(option.ref)) {\r\n                        removeFieldEventListenerAndRef(field);\r\n                    }\r\n                }\r\n            }\r\n            else if (field && isDetached(field.ref)) {\r\n                removeFieldEventListenerAndRef(field);\r\n            }\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\nvar isWeb = typeof window !== UNDEFINED && typeof document !== UNDEFINED;\n\nfunction cloneObject(data) {\r\n    var _a;\r\n    let copy;\r\n    if (isPrimitive(data) ||\r\n        (isWeb && (data instanceof File || isHTMLElement(data)))) {\r\n        return data;\r\n    }\r\n    if (!['Set', 'Map', 'Object', 'Date', 'Array'].includes((_a = data.constructor) === null || _a === void 0 ? void 0 : _a.name)) {\r\n        return data;\r\n    }\r\n    if (data instanceof Date) {\r\n        copy = new Date(data.getTime());\r\n        return copy;\r\n    }\r\n    if (data instanceof Set) {\r\n        copy = new Set();\r\n        for (const item of data) {\r\n            copy.add(item);\r\n        }\r\n        return copy;\r\n    }\r\n    if (data instanceof Map) {\r\n        copy = new Map();\r\n        for (const key of data.keys()) {\r\n            copy.set(key, cloneObject(data.get(key)));\r\n        }\r\n        return copy;\r\n    }\r\n    copy = Array.isArray(data) ? [] : {};\r\n    for (const key in data) {\r\n        copy[key] = cloneObject(data[key]);\r\n    }\r\n    return copy;\r\n}\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nvar isRadioOrCheckboxFunction = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nconst isWindowUndefined = typeof window === UNDEFINED;\r\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, resolver, context, defaultValues = {}, shouldFocusError = true, shouldUnregister = true, criteriaMode, } = {}) {\r\n    const fieldsRef = Object(react[\"useRef\"])({});\r\n    const fieldArrayDefaultValuesRef = Object(react[\"useRef\"])({});\r\n    const fieldArrayValuesRef = Object(react[\"useRef\"])({});\r\n    const watchFieldsRef = Object(react[\"useRef\"])(new Set());\r\n    const useWatchFieldsRef = Object(react[\"useRef\"])({});\r\n    const useWatchRenderFunctionsRef = Object(react[\"useRef\"])({});\r\n    const fieldsWithValidationRef = Object(react[\"useRef\"])({});\r\n    const validFieldsRef = Object(react[\"useRef\"])({});\r\n    const defaultValuesRef = Object(react[\"useRef\"])(defaultValues);\r\n    const isUnMount = Object(react[\"useRef\"])(false);\r\n    const isWatchAllRef = Object(react[\"useRef\"])(false);\r\n    const handleChangeRef = Object(react[\"useRef\"])();\r\n    const shallowFieldsStateRef = Object(react[\"useRef\"])({});\r\n    const resetFieldArrayFunctionRef = Object(react[\"useRef\"])({});\r\n    const contextRef = Object(react[\"useRef\"])(context);\r\n    const resolverRef = Object(react[\"useRef\"])(resolver);\r\n    const fieldArrayNamesRef = Object(react[\"useRef\"])(new Set());\r\n    const modeRef = Object(react[\"useRef\"])(modeChecker(mode));\r\n    const { isOnSubmit, isOnTouch } = modeRef.current;\r\n    const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\r\n    const [formState, setFormState] = Object(react[\"useState\"])({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        dirtyFields: {},\r\n        isSubmitted: false,\r\n        submitCount: 0,\r\n        touched: {},\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: !isOnSubmit,\r\n        errors: {},\r\n    });\r\n    const readFormStateRef = Object(react[\"useRef\"])({\r\n        isDirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        touched: !isProxyEnabled || isOnTouch,\r\n        isValidating: !isProxyEnabled,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const formStateRef = Object(react[\"useRef\"])(formState);\r\n    const observerRef = Object(react[\"useRef\"])();\r\n    const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange, } = Object(react[\"useRef\"])(modeChecker(reValidateMode)).current;\r\n    contextRef.current = context;\r\n    resolverRef.current = resolver;\r\n    formStateRef.current = formState;\r\n    shallowFieldsStateRef.current = shouldUnregister\r\n        ? {}\r\n        : isEmptyObject(shallowFieldsStateRef.current)\r\n            ? cloneObject(defaultValues)\r\n            : shallowFieldsStateRef.current;\r\n    const updateFormState = Object(react[\"useCallback\"])((state = {}) => {\r\n        if (!isUnMount.current) {\r\n            formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), state);\r\n            setFormState(formStateRef.current);\r\n        }\r\n    }, []);\r\n    const updateIsValidating = () => readFormStateRef.current.isValidating &&\r\n        updateFormState({\r\n            isValidating: true,\r\n        });\r\n    const shouldRenderBaseOnError = Object(react[\"useCallback\"])((name, error, shouldRender = false, state = {}, isValid) => {\r\n        let shouldReRender = shouldRender ||\r\n            isErrorStateChanged({\r\n                errors: formStateRef.current.errors,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        const previousError = get(formStateRef.current.errors, name);\r\n        if (error) {\r\n            unset(validFieldsRef.current, name);\r\n            shouldReRender =\r\n                shouldReRender ||\r\n                    !previousError ||\r\n                    !deepEqual(previousError, error, true);\r\n            set(formStateRef.current.errors, name, error);\r\n        }\r\n        else {\r\n            if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\r\n                set(validFieldsRef.current, name, true);\r\n                shouldReRender = shouldReRender || previousError;\r\n            }\r\n            unset(formStateRef.current.errors, name);\r\n        }\r\n        if ((shouldReRender && !isNullOrUndefined(shouldRender)) ||\r\n            !isEmptyObject(state) ||\r\n            readFormStateRef.current.isValidating) {\r\n            updateFormState(Object.assign(Object.assign(Object.assign({}, state), (resolverRef.current ? { isValid: !!isValid } : {})), { isValidating: false }));\r\n        }\r\n    }, []);\r\n    const setFieldValue = Object(react[\"useCallback\"])((name, rawValue) => {\r\n        const { ref, options } = fieldsRef.current[name];\r\n        const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(ref)) {\r\n            (options || []).forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(ref) && !isString(value)) {\r\n            ref.files = value;\r\n        }\r\n        else if (isMultipleSelect(ref)) {\r\n            [...ref.options].forEach((selectRef) => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(ref) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = Array.isArray(value)\r\n                    ? !!value.find((data) => data === checkboxRef.value)\r\n                    : value === checkboxRef.value))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n    }, []);\r\n    const isFormDirty = Object(react[\"useCallback\"])((name, data) => {\r\n        if (readFormStateRef.current.isDirty) {\r\n            const formValues = getValues();\r\n            name && data && set(formValues, name, data);\r\n            return !deepEqual(formValues, defaultValuesRef.current);\r\n        }\r\n        return false;\r\n    }, []);\r\n    const updateAndGetDirtyState = Object(react[\"useCallback\"])((name, shouldRender = true) => {\r\n        if (readFormStateRef.current.isDirty ||\r\n            readFormStateRef.current.dirtyFields) {\r\n            const isFieldDirty = !deepEqual(get(defaultValuesRef.current, name), getFieldValue(fieldsRef, name, shallowFieldsStateRef));\r\n            const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\r\n            const previousIsDirty = formStateRef.current.isDirty;\r\n            isFieldDirty\r\n                ? set(formStateRef.current.dirtyFields, name, true)\r\n                : unset(formStateRef.current.dirtyFields, name);\r\n            const state = {\r\n                isDirty: isFormDirty(),\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n            };\r\n            const isChanged = (readFormStateRef.current.isDirty &&\r\n                previousIsDirty !== state.isDirty) ||\r\n                (readFormStateRef.current.dirtyFields &&\r\n                    isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\r\n            isChanged && shouldRender && updateFormState(state);\r\n            return isChanged ? state : {};\r\n        }\r\n        return {};\r\n    }, []);\r\n    const executeValidation = Object(react[\"useCallback\"])(async (name, skipReRender) => {\r\n        if (false) {}\r\n        const error = (await validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], shallowFieldsStateRef))[name];\r\n        shouldRenderBaseOnError(name, error, skipReRender);\r\n        return isUndefined(error);\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const executeSchemaOrResolverValidation = Object(react[\"useCallback\"])(async (names) => {\r\n        const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n        const previousFormIsValid = formStateRef.current.isValid;\r\n        if (Array.isArray(names)) {\r\n            const isInputsValid = names\r\n                .map((name) => {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(formStateRef.current.errors, name, error)\r\n                    : unset(formStateRef.current.errors, name);\r\n                return !error;\r\n            })\r\n                .every(Boolean);\r\n            updateFormState({\r\n                isValid: isEmptyObject(errors),\r\n                isValidating: false,\r\n            });\r\n            return isInputsValid;\r\n        }\r\n        else {\r\n            const error = get(errors, names);\r\n            shouldRenderBaseOnError(names, error, previousFormIsValid !== isEmptyObject(errors), {}, isEmptyObject(errors));\r\n            return !error;\r\n        }\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const trigger = Object(react[\"useCallback\"])(async (name) => {\r\n        const fields = name || Object.keys(fieldsRef.current);\r\n        updateIsValidating();\r\n        if (resolverRef.current) {\r\n            return executeSchemaOrResolverValidation(fields);\r\n        }\r\n        if (Array.isArray(fields)) {\r\n            !name && (formStateRef.current.errors = {});\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, null)));\r\n            updateFormState({\r\n                isValidating: false,\r\n            });\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields);\r\n    }, [executeSchemaOrResolverValidation, executeValidation]);\r\n    const setInternalValues = Object(react[\"useCallback\"])((name, value, { shouldDirty, shouldValidate }) => {\r\n        const data = {};\r\n        set(data, name, value);\r\n        for (const fieldName of getPath(name, value)) {\r\n            if (fieldsRef.current[fieldName]) {\r\n                setFieldValue(fieldName, get(data, fieldName));\r\n                shouldDirty && updateAndGetDirtyState(fieldName);\r\n                shouldValidate && trigger(fieldName);\r\n            }\r\n        }\r\n    }, [trigger, setFieldValue, updateAndGetDirtyState]);\r\n    const setInternalValue = Object(react[\"useCallback\"])((name, value, config) => {\r\n        !shouldUnregister &&\r\n            !isPrimitive(value) &&\r\n            set(shallowFieldsStateRef.current, name, Array.isArray(value) ? [...value] : Object.assign({}, value));\r\n        if (fieldsRef.current[name]) {\r\n            setFieldValue(name, value);\r\n            config.shouldDirty && updateAndGetDirtyState(name);\r\n            config.shouldValidate && trigger(name);\r\n        }\r\n        else if (!isPrimitive(value)) {\r\n            setInternalValues(name, value, config);\r\n            if (fieldArrayNamesRef.current.has(name)) {\r\n                const parentName = getFieldArrayParentName(name) || name;\r\n                set(fieldArrayDefaultValuesRef.current, name, value);\r\n                resetFieldArrayFunctionRef.current[parentName]({\r\n                    [parentName]: get(fieldArrayDefaultValuesRef.current, parentName),\r\n                });\r\n                if ((readFormStateRef.current.isDirty ||\r\n                    readFormStateRef.current.dirtyFields) &&\r\n                    config.shouldDirty) {\r\n                    set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n                    updateFormState({\r\n                        isDirty: !deepEqual(Object.assign(Object.assign({}, getValues()), { [name]: value }), defaultValuesRef.current),\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\r\n    }, [updateAndGetDirtyState, setFieldValue, setInternalValues]);\r\n    const isFieldWatched = (name) => isWatchAllRef.current ||\r\n        watchFieldsRef.current.has(name) ||\r\n        watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\r\n    const renderWatchedInputs = (name) => {\r\n        let found = true;\r\n        if (!isEmptyObject(useWatchFieldsRef.current)) {\r\n            for (const key in useWatchFieldsRef.current) {\r\n                if (!name ||\r\n                    !useWatchFieldsRef.current[key].size ||\r\n                    useWatchFieldsRef.current[key].has(name) ||\r\n                    useWatchFieldsRef.current[key].has(getFieldArrayParentName(name))) {\r\n                    useWatchRenderFunctionsRef.current[key]();\r\n                    found = false;\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    function setValue(name, value, config) {\r\n        setInternalValue(name, value, config || {});\r\n        isFieldWatched(name) && updateFormState();\r\n        renderWatchedInputs(name);\r\n    }\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            let name = target.name;\r\n            const field = fieldsRef.current[name];\r\n            let error;\r\n            let isValid;\r\n            if (field) {\r\n                const isBlurEvent = type === EVENTS.BLUR;\r\n                const shouldSkipValidation = skipValidation(Object.assign({ isBlurEvent,\r\n                    isReValidateOnChange,\r\n                    isReValidateOnBlur, isTouched: !!get(formStateRef.current.touched, name), isSubmitted: formStateRef.current.isSubmitted }, modeRef.current));\r\n                let state = updateAndGetDirtyState(name, false);\r\n                let shouldRender = !isEmptyObject(state) ||\r\n                    (!isBlurEvent && isFieldWatched(name));\r\n                if (isBlurEvent &&\r\n                    !get(formStateRef.current.touched, name) &&\r\n                    readFormStateRef.current.touched) {\r\n                    set(formStateRef.current.touched, name, true);\r\n                    state = Object.assign(Object.assign({}, state), { touched: formStateRef.current.touched });\r\n                }\r\n                if (!shouldUnregister && isCheckBoxInput(target)) {\r\n                    set(shallowFieldsStateRef.current, name, getFieldValue(fieldsRef, name));\r\n                }\r\n                if (shouldSkipValidation) {\r\n                    !isBlurEvent && renderWatchedInputs(name);\r\n                    return ((!isEmptyObject(state) ||\r\n                        (shouldRender && isEmptyObject(state))) &&\r\n                        updateFormState(state));\r\n                }\r\n                updateIsValidating();\r\n                if (resolverRef.current) {\r\n                    const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n                    const previousFormIsValid = formStateRef.current.isValid;\r\n                    error = get(errors, name);\r\n                    if (isCheckBoxInput(target) &&\r\n                        !error &&\r\n                        resolverRef.current) {\r\n                        const parentNodeName = getFieldArrayParentName(name);\r\n                        const currentError = get(errors, parentNodeName, {});\r\n                        currentError.type &&\r\n                            currentError.message &&\r\n                            (error = currentError);\r\n                        if (parentNodeName &&\r\n                            (currentError ||\r\n                                get(formStateRef.current.errors, parentNodeName))) {\r\n                            name = parentNodeName;\r\n                        }\r\n                    }\r\n                    isValid = isEmptyObject(errors);\r\n                    previousFormIsValid !== isValid && (shouldRender = true);\r\n                }\r\n                else {\r\n                    error = (await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef))[name];\r\n                }\r\n                !isBlurEvent && renderWatchedInputs(name);\r\n                shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\r\n            }\r\n        };\r\n    function setFieldArrayDefaultValues(data) {\r\n        if (!shouldUnregister) {\r\n            let copy = cloneObject(data);\r\n            for (const value of fieldArrayNamesRef.current) {\r\n                if (isKey(value) && !copy[value]) {\r\n                    copy = Object.assign(Object.assign({}, copy), { [value]: [] });\r\n                }\r\n            }\r\n            return copy;\r\n        }\r\n        return data;\r\n    }\r\n    function getValues(payload) {\r\n        if (isString(payload)) {\r\n            return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\r\n        }\r\n        if (Array.isArray(payload)) {\r\n            const data = {};\r\n            for (const name of payload) {\r\n                set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\r\n            }\r\n            return data;\r\n        }\r\n        return setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister));\r\n    }\r\n    const validateResolver = Object(react[\"useCallback\"])(async (values = {}) => {\r\n        const newDefaultValues = isEmptyObject(fieldsRef.current)\r\n            ? defaultValuesRef.current\r\n            : {};\r\n        const { errors } = (await resolverRef.current(Object.assign(Object.assign(Object.assign({}, newDefaultValues), getValues()), values), contextRef.current, isValidateAllFieldCriteria)) || {};\r\n        const isValid = isEmptyObject(errors);\r\n        formStateRef.current.isValid !== isValid &&\r\n            updateFormState({\r\n                isValid,\r\n            });\r\n    }, [isValidateAllFieldCriteria]);\r\n    const removeFieldEventListener = Object(react[\"useCallback\"])((field, forceDelete) => {\r\n        findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, shallowFieldsStateRef, shouldUnregister, forceDelete);\r\n        if (shouldUnregister) {\r\n            unset(validFieldsRef.current, field.ref.name);\r\n            unset(fieldsWithValidationRef.current, field.ref.name);\r\n        }\r\n    }, [shouldUnregister]);\r\n    const updateWatchedValue = Object(react[\"useCallback\"])((name) => {\r\n        if (isWatchAllRef.current) {\r\n            updateFormState();\r\n        }\r\n        else {\r\n            for (const watchField of watchFieldsRef.current) {\r\n                if (watchField.startsWith(name)) {\r\n                    updateFormState();\r\n                    break;\r\n                }\r\n            }\r\n            renderWatchedInputs(name);\r\n        }\r\n    }, []);\r\n    const removeFieldEventListenerAndRef = Object(react[\"useCallback\"])((field, forceDelete) => {\r\n        if (field) {\r\n            removeFieldEventListener(field, forceDelete);\r\n            if (shouldUnregister && !compact(field.options || []).length) {\r\n                unset(formStateRef.current.errors, field.ref.name);\r\n                set(formStateRef.current.dirtyFields, field.ref.name, true);\r\n                updateFormState({\r\n                    isDirty: isFormDirty(),\r\n                });\r\n                readFormStateRef.current.isValid &&\r\n                    resolverRef.current &&\r\n                    validateResolver();\r\n                updateWatchedValue(field.ref.name);\r\n            }\r\n        }\r\n    }, [validateResolver, removeFieldEventListener]);\r\n    function clearErrors(name) {\r\n        name &&\r\n            (Array.isArray(name) ? name : [name]).forEach((inputName) => fieldsRef.current[inputName] && isKey(inputName)\r\n                ? delete formStateRef.current.errors[inputName]\r\n                : unset(formStateRef.current.errors, inputName));\r\n        updateFormState({\r\n            errors: name ? formStateRef.current.errors : {},\r\n        });\r\n    }\r\n    function setError(name, error) {\r\n        const ref = (fieldsRef.current[name] || {}).ref;\r\n        set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), { ref }));\r\n        updateFormState({\r\n            isValid: false,\r\n        });\r\n        error.shouldFocus && ref && ref.focus && ref.focus();\r\n    }\r\n    const watchInternal = Object(react[\"useCallback\"])((fieldNames, defaultValue, watchId) => {\r\n        const watchFields = watchId\r\n            ? useWatchFieldsRef.current[watchId]\r\n            : watchFieldsRef.current;\r\n        let fieldValues = getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, false, fieldNames);\r\n        if (isString(fieldNames)) {\r\n            const parentNodeName = getFieldArrayParentName(fieldNames) || fieldNames;\r\n            if (fieldArrayNamesRef.current.has(parentNodeName)) {\r\n                fieldValues = Object.assign(Object.assign({}, fieldArrayValuesRef.current), fieldValues);\r\n            }\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(get(defaultValuesRef.current, fieldNames))\r\n                ? defaultValue\r\n                : get(defaultValuesRef.current, fieldNames), true);\r\n        }\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? defaultValuesRef.current\r\n            : defaultValue;\r\n        if (Array.isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => (Object.assign(Object.assign({}, previous), { [name]: assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues) })), {});\r\n        }\r\n        isWatchAllRef.current = isUndefined(watchId);\r\n        return transformToNestObject((!isEmptyObject(fieldValues) && fieldValues) ||\r\n            combinedDefaultValues);\r\n    }, []);\r\n    function watch(fieldNames, defaultValue) {\r\n        return watchInternal(fieldNames, defaultValue);\r\n    }\r\n    function unregister(name) {\r\n        for (const fieldName of Array.isArray(name) ? name : [name]) {\r\n            removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\r\n        }\r\n    }\r\n    function registerFieldRef(ref, options = {}) {\r\n        if (false) {}\r\n        const { name, type, value } = ref;\r\n        const fieldRefAndValidationOptions = Object.assign({ ref }, options);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\r\n        const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n        const compareRef = (currentRef) => isWeb && (!isHTMLElement(ref) || currentRef === ref);\r\n        let field = fields[name];\r\n        let isEmptyDefaultValue = true;\r\n        let defaultValue;\r\n        if (field &&\r\n            (isRadioOrCheckbox\r\n                ? Array.isArray(field.options) &&\r\n                    compact(field.options).find((option) => {\r\n                        return value === option.ref.value && compareRef(option.ref);\r\n                    })\r\n                : compareRef(field.ref))) {\r\n            fields[name] = Object.assign(Object.assign({}, field), options);\r\n            return;\r\n        }\r\n        if (type) {\r\n            field = isRadioOrCheckbox\r\n                ? Object.assign({ options: [\r\n                        ...compact((field && field.options) || []),\r\n                        {\r\n                            ref,\r\n                        },\r\n                    ], ref: { type, name } }, options) : Object.assign({}, fieldRefAndValidationOptions);\r\n        }\r\n        else {\r\n            field = fieldRefAndValidationOptions;\r\n        }\r\n        fields[name] = field;\r\n        const isEmptyUnmountFields = isUndefined(get(shallowFieldsStateRef.current, name));\r\n        if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\r\n            defaultValue = get(isEmptyUnmountFields\r\n                ? defaultValuesRef.current\r\n                : shallowFieldsStateRef.current, name);\r\n            isEmptyDefaultValue = isUndefined(defaultValue);\r\n            if (!isEmptyDefaultValue && !isFieldArray) {\r\n                setFieldValue(name, defaultValue);\r\n            }\r\n        }\r\n        if (!isEmptyObject(options)) {\r\n            set(fieldsWithValidationRef.current, name, true);\r\n            if (!isOnSubmit && readFormStateRef.current.isValid) {\r\n                validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef).then((error) => {\r\n                    const previousFormIsValid = formStateRef.current.isValid;\r\n                    isEmptyObject(error)\r\n                        ? set(validFieldsRef.current, name, true)\r\n                        : unset(validFieldsRef.current, name);\r\n                    previousFormIsValid !== isEmptyObject(error) && updateFormState();\r\n                });\r\n            }\r\n        }\r\n        if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\r\n            !isFieldArray && unset(formStateRef.current.dirtyFields, name);\r\n        }\r\n        if (type) {\r\n            attachEventListeners(isRadioOrCheckbox && field.options\r\n                ? field.options[field.options.length - 1]\r\n                : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\r\n        }\r\n    }\r\n    function register(refOrRegisterOptions, options) {\r\n        if (!isWindowUndefined) {\r\n            if (isString(refOrRegisterOptions)) {\r\n                registerFieldRef({ name: refOrRegisterOptions }, options);\r\n            }\r\n            else if (isObject(refOrRegisterOptions) &&\r\n                'name' in refOrRegisterOptions) {\r\n                registerFieldRef(refOrRegisterOptions, options);\r\n            }\r\n            else {\r\n                return (ref) => ref && registerFieldRef(ref, refOrRegisterOptions);\r\n            }\r\n        }\r\n    }\r\n    const handleSubmit = Object(react[\"useCallback\"])((onValid, onInvalid) => async (e) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors = {};\r\n        let fieldValues = setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, true));\r\n        readFormStateRef.current.isSubmitting &&\r\n            updateFormState({\r\n                isSubmitting: true,\r\n            });\r\n        try {\r\n            if (resolverRef.current) {\r\n                const { errors, values } = await resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\r\n                formStateRef.current.errors = fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                for (const field of Object.values(fieldsRef.current)) {\r\n                    if (field) {\r\n                        const { name } = field.ref;\r\n                        const fieldError = await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\r\n                        if (fieldError[name]) {\r\n                            set(fieldErrors, name, fieldError[name]);\r\n                            unset(validFieldsRef.current, name);\r\n                        }\r\n                        else if (get(fieldsWithValidationRef.current, name)) {\r\n                            unset(formStateRef.current.errors, name);\r\n                            set(validFieldsRef.current, name, true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyObject(fieldErrors) &&\r\n                Object.keys(formStateRef.current.errors).every((name) => name in fieldsRef.current)) {\r\n                updateFormState({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                formStateRef.current.errors = Object.assign(Object.assign({}, formStateRef.current.errors), fieldErrors);\r\n                onInvalid && (await onInvalid(formStateRef.current.errors, e));\r\n                shouldFocusError &&\r\n                    focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\r\n            }\r\n        }\r\n        finally {\r\n            formStateRef.current.isSubmitting = false;\r\n            updateFormState({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\r\n                submitCount: formStateRef.current.submitCount + 1,\r\n            });\r\n        }\r\n    }, [shouldFocusError, isValidateAllFieldCriteria]);\r\n    const resetRefs = ({ errors, isDirty, isSubmitted, touched, isValid, submitCount, dirtyFields, }) => {\r\n        if (!isValid) {\r\n            validFieldsRef.current = {};\r\n            fieldsWithValidationRef.current = {};\r\n        }\r\n        fieldArrayDefaultValuesRef.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        updateFormState({\r\n            submitCount: submitCount ? formStateRef.current.submitCount : 0,\r\n            isDirty: isDirty ? formStateRef.current.isDirty : false,\r\n            isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\r\n            isValid: isValid ? formStateRef.current.isValid : false,\r\n            dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\r\n            touched: touched ? formStateRef.current.touched : {},\r\n            errors: errors ? formStateRef.current.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    };\r\n    const reset = (values, omitResetState = {}) => {\r\n        if (isWeb) {\r\n            for (const field of Object.values(fieldsRef.current)) {\r\n                if (field) {\r\n                    const { ref, options } = field;\r\n                    const inputRef = isRadioOrCheckboxFunction(ref) && Array.isArray(options)\r\n                        ? options[0].ref\r\n                        : ref;\r\n                    if (isHTMLElement(inputRef)) {\r\n                        try {\r\n                            inputRef.closest('form').reset();\r\n                            break;\r\n                        }\r\n                        catch (_a) { }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fieldsRef.current = {};\r\n        defaultValuesRef.current = Object.assign({}, (values || defaultValuesRef.current));\r\n        values && renderWatchedInputs('');\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach((resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray());\r\n        shallowFieldsStateRef.current = shouldUnregister\r\n            ? {}\r\n            : cloneObject(values || defaultValuesRef.current);\r\n        resetRefs(omitResetState);\r\n    };\r\n    Object(react[\"useEffect\"])(() => {\r\n        resolver && readFormStateRef.current.isValid && validateResolver();\r\n        observerRef.current =\r\n            observerRef.current || !isWeb\r\n                ? observerRef.current\r\n                : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\r\n    }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\r\n    Object(react[\"useEffect\"])(() => () => {\r\n        observerRef.current && observerRef.current.disconnect();\r\n        isUnMount.current = true;\r\n        if (false) {}\r\n        Object.values(fieldsRef.current).forEach((field) => removeFieldEventListenerAndRef(field, true));\r\n    }, []);\r\n    if (!resolver && readFormStateRef.current.isValid) {\r\n        formState.isValid =\r\n            deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\r\n                isEmptyObject(formStateRef.current.errors);\r\n    }\r\n    const commonProps = {\r\n        trigger,\r\n        setValue: Object(react[\"useCallback\"])(setValue, [setInternalValue, trigger]),\r\n        getValues: Object(react[\"useCallback\"])(getValues, []),\r\n        register: Object(react[\"useCallback\"])(register, [defaultValuesRef.current]),\r\n        unregister: Object(react[\"useCallback\"])(unregister, []),\r\n        formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (false) {}\r\n                    if (prop in obj) {\r\n                        readFormStateRef.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return undefined;\r\n                },\r\n            })\r\n            : formState,\r\n    };\r\n    const control = Object(react[\"useMemo\"])(() => (Object.assign({ isFormDirty,\r\n        updateWatchedValue,\r\n        shouldUnregister,\r\n        updateFormState,\r\n        removeFieldEventListener,\r\n        watchInternal, mode: modeRef.current, reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnChange,\r\n        }, validateResolver: resolver ? validateResolver : undefined, fieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        useWatchFieldsRef,\r\n        useWatchRenderFunctionsRef,\r\n        fieldArrayDefaultValuesRef,\r\n        validFieldsRef,\r\n        fieldsWithValidationRef,\r\n        fieldArrayNamesRef,\r\n        readFormStateRef,\r\n        formStateRef,\r\n        defaultValuesRef,\r\n        shallowFieldsStateRef,\r\n        fieldArrayValuesRef }, commonProps)), [\r\n        defaultValuesRef.current,\r\n        updateWatchedValue,\r\n        shouldUnregister,\r\n        removeFieldEventListener,\r\n        watchInternal,\r\n    ]);\r\n    return Object.assign({ watch,\r\n        control,\r\n        handleSubmit, reset: Object(react[\"useCallback\"])(reset, []), clearErrors: Object(react[\"useCallback\"])(clearErrors, []), setError: Object(react[\"useCallback\"])(setError, []), errors: formState.errors }, commonProps);\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst FormContext = Object(react[\"createContext\"])(null);\r\nFormContext.displayName = 'RHFContext';\r\nconst useFormContext = () => Object(react[\"useContext\"])(FormContext);\r\nconst FormProvider = (_a) => {\r\n    var { children } = _a, props = __rest(_a, [\"children\"]);\r\n    return (Object(react[\"createElement\"])(FormContext.Provider, { value: Object.assign({}, props) }, children));\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort((a, b) => a - b));\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (Array.isArray(data)) {\r\n        if (isUndefined(data[to])) {\r\n            data[to] = undefined;\r\n        }\r\n        data.splice(to, 0, data.splice(from, 1)[0]);\r\n        return data;\r\n    }\r\n    return [];\r\n};\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    const temp = [data[indexB], data[indexA]];\r\n    data[indexA] = temp[0];\r\n    data[indexB] = temp[1];\r\n};\n\nfunction prepend(data, value) {\r\n    return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\r\n}\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...(Array.isArray(value) ? value : [value || undefined]),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n\nvar fillBooleanArray = (value) => (Array.isArray(value) ? value : [value]).map((data) => {\r\n    if (isObject(data)) {\r\n        const object = {};\r\n        for (const key in data) {\r\n            object[key] = true;\r\n        }\r\n        return object;\r\n    }\r\n    return true;\r\n});\n\nconst mapIds = (values = [], keyName, skipWarn) => {\r\n    if (false) {}\r\n    return values.map((value) => (Object.assign({ [keyName]: value[keyName] || generateId() }, value)));\r\n};\r\nconst useFieldArray = ({ control, name, keyName = 'id', }) => {\r\n    const methods = useFormContext();\r\n    if (false) {}\r\n    const focusIndexRef = Object(react[\"useRef\"])(-1);\r\n    const isUnMount = Object(react[\"useRef\"])(false);\r\n    const { isFormDirty, updateWatchedValue, resetFieldArrayFunctionRef, fieldArrayNamesRef, fieldsRef, defaultValuesRef, removeFieldEventListener, formStateRef, shallowFieldsStateRef, updateFormState, readFormStateRef, validFieldsRef, fieldsWithValidationRef, fieldArrayDefaultValuesRef, validateResolver, getValues, shouldUnregister, fieldArrayValuesRef, } = control || methods.control;\r\n    const getDefaultValues = (values) => get(shouldUnregister ? values : shallowFieldsStateRef.current, name, []);\r\n    const fieldArrayParentName = getFieldArrayParentName(name);\r\n    const memoizedDefaultValues = Object(react[\"useRef\"])([\r\n        ...(get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)\r\n            ? getDefaultValues(fieldArrayDefaultValuesRef.current)\r\n            : getDefaultValues(defaultValuesRef.current)),\r\n    ]);\r\n    const [fields, setFields] = Object(react[\"useState\"])(mapIds(memoizedDefaultValues.current, keyName));\r\n    set(fieldArrayValuesRef.current, name, compact(fields));\r\n    const omitKey = (fields) => fields.map((_a = {}) => {\r\n        var _b = keyName, omitted = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\r\n        return rest;\r\n    });\r\n    fieldArrayNamesRef.current.add(name);\r\n    const getFieldArrayValue = Object(react[\"useCallback\"])(() => get(fieldArrayValuesRef.current, name, []), [name]);\r\n    const getCurrentFieldsValues = () => mapIds(get(getValues(), name, getFieldArrayValue()).map((item, index) => (Object.assign(Object.assign({}, getFieldArrayValue()[index]), item))), keyName, true);\r\n    fieldArrayNamesRef.current.add(name);\r\n    if (fieldArrayParentName &&\r\n        !get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)) {\r\n        set(fieldArrayDefaultValuesRef.current, fieldArrayParentName, cloneObject(get(defaultValuesRef.current, fieldArrayParentName)));\r\n    }\r\n    const setFieldAndValidState = (fieldsValues) => {\r\n        setFields(fieldsValues);\r\n        set(fieldArrayValuesRef.current, name, fieldsValues);\r\n        if (readFormStateRef.current.isValid && validateResolver) {\r\n            const values = getValues();\r\n            set(values, name, fieldsValues);\r\n            validateResolver(values);\r\n        }\r\n    };\r\n    const resetFields = () => {\r\n        for (const key in fieldsRef.current) {\r\n            if (isMatchFieldArrayName(key, name)) {\r\n                removeFieldEventListener(fieldsRef.current[key], true);\r\n                delete fieldsRef.current[key];\r\n            }\r\n        }\r\n    };\r\n    const cleanup = (ref) => !compact(get(ref, name, [])).length && unset(ref, name);\r\n    const updateDirtyFieldsWithDefaultValues = (updatedFieldArrayValues) => {\r\n        if (updatedFieldArrayValues) {\r\n            set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n        }\r\n    };\r\n    const batchStateUpdate = (method, args, updatedFieldValues, updatedFormValues = [], shouldSet = true, shouldUpdateValid = false) => {\r\n        if (get(shallowFieldsStateRef.current, name)) {\r\n            const output = method(get(shallowFieldsStateRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(shallowFieldsStateRef.current, name, output);\r\n        }\r\n        if (get(fieldArrayDefaultValuesRef.current, name)) {\r\n            const output = method(get(fieldArrayDefaultValuesRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(fieldArrayDefaultValuesRef.current, name, output);\r\n        }\r\n        if (Array.isArray(get(formStateRef.current.errors, name))) {\r\n            const output = method(get(formStateRef.current.errors, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.errors, name, output);\r\n            cleanup(formStateRef.current.errors);\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(formStateRef.current.touched, name)) {\r\n            const output = method(get(formStateRef.current.touched, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.touched, name, output);\r\n            cleanup(formStateRef.current.touched);\r\n        }\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFormValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n            updateDirtyFieldsWithDefaultValues(updatedFieldValues);\r\n            cleanup(formStateRef.current.dirtyFields);\r\n        }\r\n        if (shouldUpdateValid &&\r\n            readFormStateRef.current.isValid &&\r\n            !validateResolver) {\r\n            set(validFieldsRef.current, name, method(get(validFieldsRef.current, name, []), args.argA));\r\n            cleanup(validFieldsRef.current);\r\n            set(fieldsWithValidationRef.current, name, method(get(fieldsWithValidationRef.current, name, []), args.argA));\r\n            cleanup(fieldsWithValidationRef.current);\r\n        }\r\n        if (!isUnMount.current && readFormStateRef.current.isDirty) {\r\n            updateFormState({\r\n                isDirty: isFormDirty(name, omitKey(updatedFormValues)),\r\n            });\r\n        }\r\n    };\r\n    const append = (value, shouldFocus = true) => {\r\n        const appendValue = Array.isArray(value) ? value : [value];\r\n        const updateFormValues = [\r\n            ...getCurrentFieldsValues(),\r\n            ...mapIds(appendValue, keyName),\r\n        ];\r\n        setFieldAndValidState(updateFormValues);\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            updateDirtyFieldsWithDefaultValues(updateFormValues);\r\n            updateFormState({\r\n                isDirty: true,\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n            });\r\n        }\r\n        !shouldUnregister &&\r\n            set(shallowFieldsStateRef.current, name, [\r\n                ...(get(shallowFieldsStateRef.current, name) || []),\r\n                ...cloneObject(appendValue),\r\n            ]);\r\n        focusIndexRef.current = shouldFocus\r\n            ? get(fieldArrayValuesRef.current, name).length - 1\r\n            : -1;\r\n    };\r\n    const prepend$1 = (value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        const updatedFieldArrayValues = prepend(getCurrentFieldsValues(), mapIds(Array.isArray(value) ? value : [value], keyName));\r\n        setFieldAndValidState(updatedFieldArrayValues);\r\n        resetFields();\r\n        batchStateUpdate(prepend, {\r\n            argA: emptyArray,\r\n            argC: fillBooleanArray(value),\r\n        }, updatedFieldArrayValues);\r\n        focusIndexRef.current = shouldFocus ? 0 : -1;\r\n    };\r\n    const remove = (index) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        const updatedFieldValues = removeArrayAt(fieldValues, index);\r\n        setFieldAndValidState(updatedFieldValues);\r\n        resetFields();\r\n        batchStateUpdate(removeArrayAt, {\r\n            argA: index,\r\n            argC: index,\r\n        }, updatedFieldValues, removeArrayAt(fieldValues, index), true, true);\r\n    };\r\n    const insert$1 = (index, value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        const fieldValues = getCurrentFieldsValues();\r\n        const updatedFieldArrayValues = insert(fieldValues, index, mapIds(Array.isArray(value) ? value : [value], keyName));\r\n        setFieldAndValidState(updatedFieldArrayValues);\r\n        resetFields();\r\n        batchStateUpdate(insert, {\r\n            argA: index,\r\n            argB: emptyArray,\r\n            argC: index,\r\n            argD: fillBooleanArray(value),\r\n        }, updatedFieldArrayValues, insert(fieldValues, index));\r\n        focusIndexRef.current = shouldFocus ? index : -1;\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        resetFields();\r\n        setFieldAndValidState([...fieldValues]);\r\n        batchStateUpdate(swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n            argC: indexA,\r\n            argD: indexB,\r\n        }, undefined, fieldValues, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        moveArrayAt(fieldValues, from, to);\r\n        resetFields();\r\n        setFieldAndValidState([...fieldValues]);\r\n        batchStateUpdate(moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n            argC: from,\r\n            argD: to,\r\n        }, undefined, fieldValues, false);\r\n    };\r\n    Object(react[\"useEffect\"])(() => {\r\n        if (false) {}\r\n        const defaultValues = get(fieldArrayDefaultValuesRef.current, name);\r\n        if (defaultValues && fields.length < defaultValues.length) {\r\n            set(fieldArrayDefaultValuesRef.current, name, defaultValues.slice(1));\r\n        }\r\n        updateWatchedValue(name);\r\n        if (focusIndexRef.current > -1) {\r\n            for (const key in fieldsRef.current) {\r\n                const field = fieldsRef.current[key];\r\n                if (key.startsWith(`${name}[${focusIndexRef.current}]`) &&\r\n                    field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        focusIndexRef.current = -1;\r\n    }, [fields, name]);\r\n    Object(react[\"useEffect\"])(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        if (!getFieldArrayParentName(name)) {\r\n            resetFunctions[name] = (data) => {\r\n                resetFields();\r\n                !data && unset(fieldArrayDefaultValuesRef.current, name);\r\n                unset(shallowFieldsStateRef.current, name);\r\n                memoizedDefaultValues.current = get(data || defaultValuesRef.current, name);\r\n                if (!isUnMount.current) {\r\n                    setFields(mapIds(memoizedDefaultValues.current, keyName));\r\n                }\r\n            };\r\n        }\r\n        return () => {\r\n            isUnMount.current = true;\r\n            shouldUnregister && remove();\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            unset(fieldArrayValuesRef.current, name);\r\n            fieldArrayNames.delete(name);\r\n        };\r\n    }, []);\r\n    return {\r\n        swap: Object(react[\"useCallback\"])(swap, [name]),\r\n        move: Object(react[\"useCallback\"])(move, [name]),\r\n        prepend: Object(react[\"useCallback\"])(prepend$1, [name]),\r\n        append: Object(react[\"useCallback\"])(append, [name]),\r\n        remove: Object(react[\"useCallback\"])(remove, [name]),\r\n        insert: Object(react[\"useCallback\"])(insert$1, [name]),\r\n        fields: compact(fields),\r\n    };\r\n};\n\nvar getInputValue = (event) => isPrimitive(event) ||\r\n    !isObject(event.target) ||\r\n    (isObject(event.target) && !event.type)\r\n    ? event\r\n    : isUndefined(event.target.value)\r\n        ? event.target.checked\r\n        : event.target.value;\n\nfunction useController({ name, rules, defaultValue, control, onFocus, }) {\r\n    const methods = useFormContext();\r\n    if (false) {}\r\n    const { defaultValuesRef, setValue, register, unregister, trigger, mode, reValidateMode: { isReValidateOnBlur, isReValidateOnChange }, formState, formStateRef: { current: { isSubmitted, touched, errors }, }, updateFormState, readFormStateRef, fieldsRef, fieldArrayNamesRef, shallowFieldsStateRef, } = control || methods.control;\r\n    const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n    const getInitialValue = () => !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray\r\n        ? get(shallowFieldsStateRef.current, name)\r\n        : isUndefined(defaultValue)\r\n            ? get(defaultValuesRef.current, name)\r\n            : defaultValue;\r\n    const [value, setInputStateValue] = Object(react[\"useState\"])(getInitialValue());\r\n    const valueRef = Object(react[\"useRef\"])(value);\r\n    const ref = Object(react[\"useRef\"])({\r\n        focus: () => null,\r\n    });\r\n    const onFocusRef = Object(react[\"useRef\"])(onFocus ||\r\n        (() => {\r\n            if (isFunction(ref.current.focus)) {\r\n                ref.current.focus();\r\n            }\r\n            if (false) {}\r\n        }));\r\n    const shouldValidate = Object(react[\"useCallback\"])((isBlurEvent) => !skipValidation(Object.assign({ isBlurEvent,\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted, isTouched: !!get(touched, name) }, mode)), [\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted,\r\n        touched,\r\n        name,\r\n        mode,\r\n    ]);\r\n    const commonTask = Object(react[\"useCallback\"])(([event]) => {\r\n        const data = getInputValue(event);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    }, []);\r\n    const registerField = Object(react[\"useCallback\"])((shouldUpdateValue) => {\r\n        if (false) {}\r\n        if (fieldsRef.current[name]) {\r\n            fieldsRef.current[name] = Object.assign({ ref: fieldsRef.current[name].ref }, rules);\r\n        }\r\n        else {\r\n            register(Object.defineProperties({\r\n                name,\r\n                focus: onFocusRef.current,\r\n            }, {\r\n                value: {\r\n                    set(data) {\r\n                        setInputStateValue(data);\r\n                        valueRef.current = data;\r\n                    },\r\n                    get() {\r\n                        return valueRef.current;\r\n                    },\r\n                },\r\n            }), rules);\r\n            shouldUpdateValue = isUndefined(get(defaultValuesRef.current, name));\r\n        }\r\n        shouldUpdateValue &&\r\n            isNotFieldArray &&\r\n            setInputStateValue(getInitialValue());\r\n    }, [rules, name, register]);\r\n    Object(react[\"useEffect\"])(() => () => unregister(name), [name]);\r\n    Object(react[\"useEffect\"])(() => {\r\n        if (false) {}\r\n        registerField();\r\n    }, [registerField]);\r\n    Object(react[\"useEffect\"])(() => {\r\n        !fieldsRef.current[name] && registerField(true);\r\n    });\r\n    const onBlur = Object(react[\"useCallback\"])(() => {\r\n        if (readFormStateRef.current.touched && !get(touched, name)) {\r\n            set(touched, name, true);\r\n            updateFormState({\r\n                touched,\r\n            });\r\n        }\r\n        shouldValidate(true) && trigger(name);\r\n    }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\r\n    const onChange = Object(react[\"useCallback\"])((...event) => setValue(name, commonTask(event), {\r\n        shouldValidate: shouldValidate(),\r\n        shouldDirty: true,\r\n    }), [setValue, name, shouldValidate]);\r\n    return {\r\n        field: {\r\n            onChange,\r\n            onBlur,\r\n            name,\r\n            value,\r\n            ref,\r\n        },\r\n        meta: Object.defineProperties({\r\n            invalid: !!get(errors, name),\r\n        }, {\r\n            isDirty: {\r\n                get() {\r\n                    return !!get(formState.dirtyFields, name);\r\n                },\r\n            },\r\n            isTouched: {\r\n                get() {\r\n                    return !!get(formState.touched, name);\r\n                },\r\n            },\r\n        }),\r\n    };\r\n}\n\nfunction useWatch({ control, name, defaultValue, }) {\r\n    const methods = useFormContext();\r\n    if (false) {}\r\n    const { useWatchFieldsRef, useWatchRenderFunctionsRef, watchInternal, defaultValuesRef, } = control || methods.control;\r\n    const updateValue = Object(react[\"useState\"])()[1];\r\n    const idRef = Object(react[\"useRef\"])();\r\n    const defaultValueRef = Object(react[\"useRef\"])(defaultValue);\r\n    Object(react[\"useEffect\"])(() => {\r\n        if (false) {}\r\n        const id = (idRef.current = generateId());\r\n        const watchFieldsHookRender = useWatchRenderFunctionsRef.current;\r\n        const watchFieldsHook = useWatchFieldsRef.current;\r\n        watchFieldsHook[id] = new Set();\r\n        watchFieldsHookRender[id] = () => updateValue({});\r\n        watchInternal(name, defaultValueRef.current, id);\r\n        return () => {\r\n            delete watchFieldsHook[id];\r\n            delete watchFieldsHookRender[id];\r\n        };\r\n    }, [\r\n        name,\r\n        useWatchRenderFunctionsRef,\r\n        useWatchFieldsRef,\r\n        watchInternal,\r\n        defaultValueRef,\r\n    ]);\r\n    return idRef.current\r\n        ? watchInternal(name, defaultValueRef.current, idRef.current)\r\n        : isUndefined(defaultValue)\r\n            ? isString(name)\r\n                ? get(defaultValuesRef.current, name)\r\n                : Array.isArray(name)\r\n                    ? name.reduce((previous, inputName) => (Object.assign(Object.assign({}, previous), { [inputName]: get(defaultValuesRef.current, inputName) })), {})\r\n                    : defaultValuesRef.current\r\n            : defaultValue;\r\n}\n\nconst Controller = (props) => {\r\n    const { rules, as, render, defaultValue, control, onFocus } = props, rest = __rest(props, [\"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\r\n    const { field, meta } = useController(props);\r\n    const componentProps = Object.assign(Object.assign({}, rest), field);\r\n    return as\r\n        ? Object(react[\"isValidElement\"])(as)\r\n            ? Object(react[\"cloneElement\"])(as, componentProps)\r\n            : Object(react[\"createElement\"])(as, componentProps)\r\n        : render\r\n            ? render(field, meta)\r\n            : null;\r\n};\n\n\n//# sourceMappingURL=index.esm.js.map\n\n// EXTERNAL MODULE: ./node_modules/react-csv/index.js\nvar react_csv = __webpack_require__(\"HTVX\");\n\n// CONCATENATED MODULE: ./helpers/convertObjectArray.js\nvar convertObjectToArray = function convertObjectToArray(arr) {\n  return Object.keys(arr).map(function (key) {\n    return {\n      value: arr[key],\n      information: capitalize(key)\n    };\n  });\n};\n\nvar capitalize = function capitalize(word) {\n  return word.toLowerCase().replace(/\\w/, function (firstLetter) {\n    return firstLetter.toUpperCase();\n  });\n};\n// CONCATENATED MODULE: ./pages/process-background-information/index.js\n\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(defineProperty[\"a\" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\nvar process_background_information_ProcessBackgroundInformation = function ProcessBackgroundInformation() {\n  var btnRef = Object(react[\"useRef\"])();\n\n  var _useState = Object(react[\"useState\"])([]),\n      csvData = _useState[0],\n      setCsvData = _useState[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var headers = [{\n    label: 'Information',\n    key: 'information'\n  }, {\n    label: 'Value',\n    key: 'value'\n  }];\n  var csvReport = {\n    filename: 'process-background.csv',\n    headers: headers,\n    data: csvData\n  };\n\n  var exportBackgroundInformation = /*#__PURE__*/function () {\n    var _ref = Object(asyncToGenerator[\"a\" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(data) {\n      var array;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              array = convertObjectToArray(data);\n              _context.next = 3;\n              return setCsvData(array);\n\n            case 3:\n              btnRef.current.link.click();\n              console.log({\n                array: array\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function exportBackgroundInformation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(jsx_runtime[\"Fragment\"], {\n    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"section\", {\n      className: \"process-bg\",\n      children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h1\", {\n                children: \"Process Background Information\"\n              })\n            })\n          }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"form\", {\n                onSubmit: handleSubmit(exportBackgroundInformation),\n                children: [/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mb-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead pl-3\",\n                      children: \"Information\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 pr-sm-0 mb-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead pl-3\",\n                      children: \"Value\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Title\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"title\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Doc_Num\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"doc_num\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Purpose\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"purpose\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Scope\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"scope\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Accountability\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"accountability\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Responsibility\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"responsibility\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"References\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"references\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Definitions\"\n                    })\n                  }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"definitions\",\n                      placeholder: \"User inputs\"\n                    })\n                  })]\n                }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\", {\n                    button: \"submit\",\n                    className: \"btn btn-green mt-4\",\n                    children: \"Export to data frame\"\n                  })\n                })]\n              }), /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_csv[\"CSVLink\"], _objectSpread(_objectSpread({\n                className: \"d-none\",\n                ref: btnRef\n              }, csvReport), {}, {\n                children: \"Export\"\n              }))]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\n/* harmony default export */ var process_background_information = __webpack_exports__[\"default\"] = (process_background_information_ProcessBackgroundInformation);\n\n/***/ }),\n\n/***/ \"rg98\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _asyncToGenerator; });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\n/***/ })\n\n},[[\"6TX+\",0,2,1]]]);","inputSourceMap":{"version":3,"sources":["/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-csv/lib/components/Link.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Fprocess-background-information&absolutePagePath=private-next-pages%2Fprocess-background-information%2Findex.js!","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-csv/lib/metaProps.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-csv/index.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-csv/lib/core.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-csv/lib/index.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-csv/lib/components/Download.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/react-hook-form/dist/index.esm.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/helpers/convertObjectArray.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/pages/process-background-information/index.js","/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":[],"mappings":"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2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,aAAa,mBAAO,CAAC,MAAO;;AAE5B;;AAEA,YAAY,mBAAO,CAAC,MAAS;;AAE7B,iBAAiB,mBAAO,CAAC,MAAc;;AAEvC,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,8B;;;;;;;;AC7EA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbkJ;;AAElJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,WAAW;AACzB,WAAW,QAAQ;;AAEnB;;AAEA;;AAEA;;AAEA,wDAAwD,OAAO;;AAE/D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO,QAAQ,EAAE;AACxC,oBAAoB;AACpB;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO,kBAAkB,gDAAgD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY,OAAO,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,iFAAiF;AACjF;AACA;AACA,wDAAwD;AACxD,kDAAkD;AAClD,0EAA0E,wBAAwB,cAAc;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,0DAA0D;AACtF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,+BAAc;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,kBAAkB,sCAAsC,+DAA+D,KAAK,0BAA0B,GAAG;;AAE7L,iEAAiE,YAAY,QAAQ,yEAAyE;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe;AACf;AACA;AACA,yCAAyC;AACzC,uEAAuE;AACvE,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA,yCAAyC;AACzC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,2HAA2H;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+DAA+D,WAAW;AAC1E;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,kBAAkB,kHAAkH,mEAAmE,KAAK;AAC5M,sBAAsB,uBAAM,GAAG;AAC/B,uCAAuC,uBAAM,GAAG;AAChD,gCAAgC,uBAAM,GAAG;AACzC,2BAA2B,uBAAM;AACjC,8BAA8B,uBAAM,GAAG;AACvC,uCAAuC,uBAAM,GAAG;AAChD,oCAAoC,uBAAM,GAAG;AAC7C,2BAA2B,uBAAM,GAAG;AACpC,6BAA6B,uBAAM;AACnC,sBAAsB,uBAAM;AAC5B,0BAA0B,uBAAM;AAChC,4BAA4B,uBAAM;AAClC,kCAAkC,uBAAM,GAAG;AAC3C,uCAAuC,uBAAM,GAAG;AAChD,uBAAuB,uBAAM;AAC7B,wBAAwB,uBAAM;AAC9B,+BAA+B,uBAAM;AACrC,oBAAoB,uBAAM;AAC1B,WAAW,wBAAwB;AACnC;AACA,sCAAsC,yBAAQ;AAC9C;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kBAAkB;AAClB,KAAK;AACL,6BAA6B,uBAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yBAAyB,uBAAM;AAC/B,wBAAwB,uBAAM;AAC9B,WAAW,kEAAkE,GAAG,uBAAM;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAAW,YAAY;AACnD;AACA,iEAAiE;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,oCAAoC,4BAAW,+CAA+C;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,kCAAkC,qBAAqB,KAAK,KAAK,sBAAsB;AAC/J;AACA,KAAK;AACL,0BAA0B,4BAAW;AACrC,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,4BAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,4BAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,4BAAW;AACzC,YAAY,KAAqC,EAAE,EAK1C;AACT;AACA;AACA;AACA,KAAK;AACL,8CAA8C,4BAAW;AACzD,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA,KAAK;AACL,oBAAoB,4BAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL,8BAA8B,4BAAW,gBAAgB,8BAA8B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,6BAA6B,4BAAW;AACxC;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0EAA0E,iBAAiB,gBAAgB;AAC3G,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,6IAA6I;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,WAAW,wCAAwC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,UAAU,cAAc;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAAW,mBAAmB;AAC3D;AACA;AACA;AACA,eAAe,SAAS,0EAA0E;AAClG;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL,qCAAqC,4BAAW;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,+BAA+B,4BAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2CAA2C,4BAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,SAAS;AACT;AACA;AACA,kDAAkD;AAClD,6EAA6E,WAAW,MAAM;AAC9F;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,4BAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,cAAc,mFAAmF,MAAM;AAC/L;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,YAAY,KAAqC,EAAE,EAU1C;AACT,eAAe,oBAAoB;AACnC,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB,6BAA6B,aAAa,EAAE,6BAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,iBAAiB;AACjB;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,wBAAwB,4EAA4E;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E,gEAAgE;AAChE,6DAA6D;AAC7D;AACA;AACA,SAAS;AACT;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0BAAS;AACb;AACA;AACA,YAAY,KAAqC,EAAE,EAE1C;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAAW;AAC7B,mBAAmB,4BAAW;AAC9B,kBAAkB,4BAAW;AAC7B,oBAAoB,4BAAW;AAC/B;AACA;AACA;AACA,wBAAwB,KAAqC,EAAE,EAI1C;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,oBAAoB,wBAAO,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,6BAA6B,4BAAW,0BAA0B,4BAAW,6BAA6B,4BAAW,0CAA0C;AAC/J;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,8BAAa;AACjC;AACA,6BAA6B,2BAAU;AACvC;AACA,SAAS,WAAW;AACpB,YAAY,8BAAa,wBAAwB,wBAAwB,UAAU;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,QAAQ,KAAqC,EAAE,EAe1C;AACL,iDAAiD,4CAA4C;AAC7F;AACA,wBAAwB,iCAAiC;AACzD;AACA,QAAQ,KAAqC,EAAE,EAI1C;AACL,0BAA0B,uBAAM;AAChC,sBAAsB,uBAAM;AAC5B,WAAW,2VAA2V;AACtW;AACA;AACA,kCAAkC,uBAAM;AACxC;AACA;AACA;AACA;AACA,gCAAgC,yBAAQ;AACxC;AACA,mDAAmD;AACnD;AACA;AACA,KAAK;AACL;AACA,+BAA+B,4BAAW;AAC1C,iJAAiJ;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,IAAI,0BAAS;AACb,YAAY,KAAqC,EAAE,EAI1C;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK,GAAG,sBAAsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0BAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,4BAAW;AACzB,cAAc,4BAAW;AACzB,iBAAiB,4BAAW;AAC5B,gBAAgB,4BAAW;AAC3B,gBAAgB,4BAAW;AAC3B,gBAAgB,4BAAW;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,+CAA+C;AACvE;AACA,QAAQ,KAAqC,EAAE,EAI1C;AACL,WAAW,mFAAmF,2CAA2C,4BAA4B,WAAW,+BAA+B,GAAG,4FAA4F;AAC9S;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yBAAQ;AAChD,qBAAqB,uBAAM;AAC3B,gBAAgB,uBAAM;AACtB;AACA,KAAK;AACL,uBAAuB,uBAAM;AAC7B;AACA;AACA;AACA;AACA,gBAAgB,KAAqC,EAAE,EAI1C;AACb,SAAS;AACT,2BAA2B,4BAAW,iDAAiD;AACvF;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAAW;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL,0BAA0B,4BAAW;AACrC,YAAY,KAAqC,EAAE,EAI1C;AACT;AACA,qDAAqD,mCAAmC;AACxF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0BAAS;AACb,IAAI,0BAAS;AACb,YAAY,KAAqC,EAAE,EAO1C;AACT;AACA,KAAK;AACL,IAAI,0BAAS;AACb;AACA,KAAK;AACL,mBAAmB,4BAAW;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL,qBAAqB,4BAAW;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA,QAAQ,KAAqC,EAAE,EAI1C;AACL,WAAW,kFAAkF;AAC7F,wBAAwB,yBAAQ;AAChC,kBAAkB,uBAAM;AACxB,4BAA4B,uBAAM;AAClC,IAAI,0BAAS;AACb,YAAY,KAAqC,EAAE,EAI1C;AACT;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,cAAc,wDAAwD,MAAM;AACtK;AACA;AACA;;AAEA;AACA,WAAW,oDAAoD;AAC/D,WAAW,cAAc;AACzB,yDAAyD;AACzD;AACA,UAAU,+BAAc;AACxB,cAAc,6BAAY;AAC1B,cAAc,8BAAa;AAC3B;AACA;AACA;AACA;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","file":"x","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/process-background-information\",\n        function () {\n          return require(\"private-next-pages/process-background-information/index.js\");\n        }\n      ]);\n    ","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];","module.exports = require('./lib/index.js');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { isValidElement, useRef, useState, useCallback, useEffect, useMemo, createContext, useContext, createElement, cloneElement } from 'react';\n\nvar isHTMLElement = (value) => value instanceof HTMLElement;\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst SELECT = 'select';\r\nconst UNDEFINED = 'undefined';\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nfunction attachEventListeners({ ref }, shouldAttachChangeEvent, handleChange) {\r\n    if (isHTMLElement(ref) && handleChange) {\r\n        ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !(value instanceof Date);\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar compact = (value) => value.filter(Boolean);\n\nvar stringToPath = (input) => compact(input\r\n    .replace(/[\"|']/g, '')\r\n    .replace(/\\[/g, '.')\r\n    .replace(/\\]/g, '')\r\n    .split('.'));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data, value = {}) => {\r\n    for (const key in data) {\r\n        !isKey(key) ? set(value, key, data[key]) : (value[key] = data[key]);\r\n    }\r\n    return value;\r\n};\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj = {}, path, defaultValue) => {\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nvar focusOnErrorField = (fields, fieldErrors) => {\r\n    for (const key in fields) {\r\n        if (get(fieldErrors, key)) {\r\n            const field = fields[key];\r\n            if (field) {\r\n                if (field.ref.focus && isUndefined(field.ref.focus())) {\r\n                    break;\r\n                }\r\n                else if (field.options) {\r\n                    field.options[0].ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (isHTMLElement(ref) && ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.ref.checked\r\n        ? {\r\n            isValid: true,\r\n            value: option.ref.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isMultipleSelect = (element) => element.type === `${SELECT}-multiple`;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.ref.checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || value === ''\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fieldsRef, name, shallowFieldsStateRef, excludeDisabled, shouldKeepRawValue) {\r\n    const field = fieldsRef.current[name];\r\n    if (field) {\r\n        const { ref: { value, disabled }, ref, valueAsNumber, valueAsDate, setValueAs, } = field;\r\n        if (disabled && excludeDisabled) {\r\n            return;\r\n        }\r\n        if (isFileInput(ref)) {\r\n            return ref.files;\r\n        }\r\n        if (isRadioInput(ref)) {\r\n            return getRadioValue(field.options).value;\r\n        }\r\n        if (isMultipleSelect(ref)) {\r\n            return getMultipleSelectValue(ref.options);\r\n        }\r\n        if (isCheckBoxInput(ref)) {\r\n            return getCheckboxValue(field.options).value;\r\n        }\r\n        return shouldKeepRawValue\r\n            ? value\r\n            : valueAsNumber\r\n                ? value === ''\r\n                    ? NaN\r\n                    : +value\r\n                : valueAsDate\r\n                    ? ref.valueAsDate\r\n                    : setValueAs\r\n                        ? setValueAs(value)\r\n                        : value;\r\n    }\r\n    if (shallowFieldsStateRef) {\r\n        return get(shallowFieldsStateRef.current, name);\r\n    }\r\n}\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) &&\r\n                        !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nconst isSameRef = (fieldValue, ref) => fieldValue && fieldValue.ref === ref;\r\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, shallowFieldsStateRef, shouldUnregister, forceDelete) {\r\n    const { ref, ref: { name }, } = field;\r\n    const fieldRef = fieldsRef.current[name];\r\n    if (!shouldUnregister) {\r\n        const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\r\n        !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\r\n    }\r\n    if (!ref.type || !fieldRef) {\r\n        delete fieldsRef.current[name];\r\n        return;\r\n    }\r\n    if (isRadioInput(ref) || isCheckBoxInput(ref)) {\r\n        if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\r\n            compact(fieldRef.options).forEach((option = {}, index) => {\r\n                if ((isDetached(option.ref) && isSameRef(option, option.ref)) ||\r\n                    forceDelete) {\r\n                    removeAllEventListeners(option.ref, handleChange);\r\n                    unset(fieldRef.options, `[${index}]`);\r\n                }\r\n            });\r\n            if (fieldRef.options && !compact(fieldRef.options).length) {\r\n                delete fieldsRef.current[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fieldsRef.current[name];\r\n        }\r\n    }\r\n    else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        delete fieldsRef.current[name];\r\n    }\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepMerge(target, source) {\r\n    if (isPrimitive(target) || isPrimitive(source)) {\r\n        return source;\r\n    }\r\n    for (const key in source) {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n        try {\r\n            target[key] =\r\n                (isObject(targetValue) && isObject(sourceValue)) ||\r\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\r\n                    ? deepMerge(targetValue, sourceValue)\r\n                    : sourceValue;\r\n        }\r\n        catch (_a) { }\r\n    }\r\n    return target;\r\n}\n\nfunction deepEqual(object1, object2, isErrorObject) {\r\n    if (isPrimitive(object1) ||\r\n        isPrimitive(object2) ||\r\n        object1 instanceof Date ||\r\n        object2 instanceof Date) {\r\n        return object1 === object2;\r\n    }\r\n    if (!isValidElement(object1)) {\r\n        const keys1 = Object.keys(object1);\r\n        const keys2 = Object.keys(object2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n        for (const key of keys1) {\r\n            const val1 = object1[key];\r\n            if (!(isErrorObject && key === 'ref')) {\r\n                const val2 = object2[key];\r\n                if ((isObject(val1) || Array.isArray(val1)) &&\r\n                    (isObject(val2) || Array.isArray(val2))\r\n                    ? !deepEqual(val1, val2, isErrorObject)\r\n                    : val1 !== val2) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\r\n    let index = -1;\r\n    while (++index < values.length) {\r\n        for (const key in values[index]) {\r\n            if (Array.isArray(values[index][key])) {\r\n                !dirtyFields[index] && (dirtyFields[index] = {});\r\n                dirtyFields[index][key] = [];\r\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\r\n            }\r\n            else {\r\n                deepEqual(get(defaultValues[index] || {}, key), values[index][key])\r\n                    ? set(dirtyFields[index] || {}, key)\r\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\r\n            }\r\n        }\r\n        parentNode &&\r\n            !dirtyFields.length &&\r\n            delete parentNode[parentName];\r\n    }\r\n    return dirtyFields;\r\n}\r\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n\nvar isString = (value) => typeof value === 'string';\n\nvar getFieldsValues = (fieldsRef, shallowFieldsState, shouldUnregister, excludeDisabled, search) => {\r\n    const output = {};\r\n    for (const name in fieldsRef.current) {\r\n        if (isUndefined(search) ||\r\n            (isString(search)\r\n                ? name.startsWith(search)\r\n                : Array.isArray(search) && search.find((data) => name.startsWith(data)))) {\r\n            output[name] = getFieldValue(fieldsRef, name, undefined, excludeDisabled);\r\n        }\r\n    }\r\n    return shouldUnregister\r\n        ? transformToNestObject(output)\r\n        : deepMerge(shallowFieldsState, transformToNestObject(output));\r\n};\n\nvar isErrorStateChanged = ({ errors, name, error, validFields, fieldsWithValidation, }) => {\r\n    const isValid = isUndefined(error);\r\n    const previousError = get(errors, name);\r\n    return ((isValid && !!previousError) ||\r\n        (!isValid && !deepEqual(previousError, error, true)) ||\r\n        (isValid && get(fieldsWithValidation, name) && !get(validFields, name)));\r\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isMessage = (value) => isString(value) || isValidElement(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) || (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { value }, options, required, maxLength, minLength, min, max, pattern, validate, }, shallowFieldsStateRef) => {\r\n    const name = ref.name;\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = value === '';\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: isRadioOrCheckbox\r\n                    ? ((fieldsRef.current[name].options || [])[0] || {}).ref\r\n                    : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '') {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNaN(value)) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(value);\r\n            if (isString(maxOutput.value)) {\r\n                exceedMax = valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value)) {\r\n                exceedMin = valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            value.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            value.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && pattern && !isEmpty) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\r\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef, false, true);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const [key, validateFunction] of Object.entries(validate)) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateResult = await validateFunction(fieldValue);\r\n                const validateError = getValidateError(validateResult, validateRef, key);\r\n                if (validateError) {\r\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nconst getPath = (rootPath, values, paths = []) => {\r\n    for (const property in values) {\r\n        const rootName = (rootPath +\r\n            (isObject(values)\r\n                ? `.${property}`\r\n                : `[${property}]`));\r\n        isPrimitive(values[property])\r\n            ? paths.push(rootName)\r\n            : getPath(rootName, values[property], paths);\r\n    }\r\n    return paths;\r\n};\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, inputValue, isSingleField) => {\r\n    let value = undefined;\r\n    watchFields.add(fieldName);\r\n    if (!isEmptyObject(fieldValues)) {\r\n        value = get(fieldValues, fieldName);\r\n        if (isObject(value) || Array.isArray(value)) {\r\n            getPath(fieldName, value).forEach((name) => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isSingleField\r\n            ? inputValue\r\n            : get(inputValue, fieldName)\r\n        : value;\r\n};\n\nvar skipValidation = ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\r\n    if (isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? isReValidateOnChange : isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar getFieldArrayParentName = (name) => name.substring(0, name.indexOf('['));\n\nconst isMatchFieldArrayName = (name, searchName) => RegExp(`^${searchName}([|.)\\\\d+`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\r\nvar isNameInFieldArray = (names, name) => [...names].some((current) => isMatchFieldArrayName(name, current));\n\nvar isSelectInput = (element) => element.type === `${SELECT}-one`;\n\nfunction onDomRemove(fieldsRef, removeFieldEventListenerAndRef) {\r\n    const observer = new MutationObserver(() => {\r\n        for (const field of Object.values(fieldsRef.current)) {\r\n            if (field && field.options) {\r\n                for (const option of field.options) {\r\n                    if (option && option.ref && isDetached(option.ref)) {\r\n                        removeFieldEventListenerAndRef(field);\r\n                    }\r\n                }\r\n            }\r\n            else if (field && isDetached(field.ref)) {\r\n                removeFieldEventListenerAndRef(field);\r\n            }\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\nvar isWeb = typeof window !== UNDEFINED && typeof document !== UNDEFINED;\n\nfunction cloneObject(data) {\r\n    var _a;\r\n    let copy;\r\n    if (isPrimitive(data) ||\r\n        (isWeb && (data instanceof File || isHTMLElement(data)))) {\r\n        return data;\r\n    }\r\n    if (!['Set', 'Map', 'Object', 'Date', 'Array'].includes((_a = data.constructor) === null || _a === void 0 ? void 0 : _a.name)) {\r\n        return data;\r\n    }\r\n    if (data instanceof Date) {\r\n        copy = new Date(data.getTime());\r\n        return copy;\r\n    }\r\n    if (data instanceof Set) {\r\n        copy = new Set();\r\n        for (const item of data) {\r\n            copy.add(item);\r\n        }\r\n        return copy;\r\n    }\r\n    if (data instanceof Map) {\r\n        copy = new Map();\r\n        for (const key of data.keys()) {\r\n            copy.set(key, cloneObject(data.get(key)));\r\n        }\r\n        return copy;\r\n    }\r\n    copy = Array.isArray(data) ? [] : {};\r\n    for (const key in data) {\r\n        copy[key] = cloneObject(data[key]);\r\n    }\r\n    return copy;\r\n}\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nvar isRadioOrCheckboxFunction = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nconst isWindowUndefined = typeof window === UNDEFINED;\r\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, resolver, context, defaultValues = {}, shouldFocusError = true, shouldUnregister = true, criteriaMode, } = {}) {\r\n    const fieldsRef = useRef({});\r\n    const fieldArrayDefaultValuesRef = useRef({});\r\n    const fieldArrayValuesRef = useRef({});\r\n    const watchFieldsRef = useRef(new Set());\r\n    const useWatchFieldsRef = useRef({});\r\n    const useWatchRenderFunctionsRef = useRef({});\r\n    const fieldsWithValidationRef = useRef({});\r\n    const validFieldsRef = useRef({});\r\n    const defaultValuesRef = useRef(defaultValues);\r\n    const isUnMount = useRef(false);\r\n    const isWatchAllRef = useRef(false);\r\n    const handleChangeRef = useRef();\r\n    const shallowFieldsStateRef = useRef({});\r\n    const resetFieldArrayFunctionRef = useRef({});\r\n    const contextRef = useRef(context);\r\n    const resolverRef = useRef(resolver);\r\n    const fieldArrayNamesRef = useRef(new Set());\r\n    const modeRef = useRef(modeChecker(mode));\r\n    const { isOnSubmit, isOnTouch } = modeRef.current;\r\n    const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\r\n    const [formState, setFormState] = useState({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        dirtyFields: {},\r\n        isSubmitted: false,\r\n        submitCount: 0,\r\n        touched: {},\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: !isOnSubmit,\r\n        errors: {},\r\n    });\r\n    const readFormStateRef = useRef({\r\n        isDirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        touched: !isProxyEnabled || isOnTouch,\r\n        isValidating: !isProxyEnabled,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const formStateRef = useRef(formState);\r\n    const observerRef = useRef();\r\n    const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange, } = useRef(modeChecker(reValidateMode)).current;\r\n    contextRef.current = context;\r\n    resolverRef.current = resolver;\r\n    formStateRef.current = formState;\r\n    shallowFieldsStateRef.current = shouldUnregister\r\n        ? {}\r\n        : isEmptyObject(shallowFieldsStateRef.current)\r\n            ? cloneObject(defaultValues)\r\n            : shallowFieldsStateRef.current;\r\n    const updateFormState = useCallback((state = {}) => {\r\n        if (!isUnMount.current) {\r\n            formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), state);\r\n            setFormState(formStateRef.current);\r\n        }\r\n    }, []);\r\n    const updateIsValidating = () => readFormStateRef.current.isValidating &&\r\n        updateFormState({\r\n            isValidating: true,\r\n        });\r\n    const shouldRenderBaseOnError = useCallback((name, error, shouldRender = false, state = {}, isValid) => {\r\n        let shouldReRender = shouldRender ||\r\n            isErrorStateChanged({\r\n                errors: formStateRef.current.errors,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        const previousError = get(formStateRef.current.errors, name);\r\n        if (error) {\r\n            unset(validFieldsRef.current, name);\r\n            shouldReRender =\r\n                shouldReRender ||\r\n                    !previousError ||\r\n                    !deepEqual(previousError, error, true);\r\n            set(formStateRef.current.errors, name, error);\r\n        }\r\n        else {\r\n            if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\r\n                set(validFieldsRef.current, name, true);\r\n                shouldReRender = shouldReRender || previousError;\r\n            }\r\n            unset(formStateRef.current.errors, name);\r\n        }\r\n        if ((shouldReRender && !isNullOrUndefined(shouldRender)) ||\r\n            !isEmptyObject(state) ||\r\n            readFormStateRef.current.isValidating) {\r\n            updateFormState(Object.assign(Object.assign(Object.assign({}, state), (resolverRef.current ? { isValid: !!isValid } : {})), { isValidating: false }));\r\n        }\r\n    }, []);\r\n    const setFieldValue = useCallback((name, rawValue) => {\r\n        const { ref, options } = fieldsRef.current[name];\r\n        const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(ref)) {\r\n            (options || []).forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(ref) && !isString(value)) {\r\n            ref.files = value;\r\n        }\r\n        else if (isMultipleSelect(ref)) {\r\n            [...ref.options].forEach((selectRef) => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(ref) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = Array.isArray(value)\r\n                    ? !!value.find((data) => data === checkboxRef.value)\r\n                    : value === checkboxRef.value))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n    }, []);\r\n    const isFormDirty = useCallback((name, data) => {\r\n        if (readFormStateRef.current.isDirty) {\r\n            const formValues = getValues();\r\n            name && data && set(formValues, name, data);\r\n            return !deepEqual(formValues, defaultValuesRef.current);\r\n        }\r\n        return false;\r\n    }, []);\r\n    const updateAndGetDirtyState = useCallback((name, shouldRender = true) => {\r\n        if (readFormStateRef.current.isDirty ||\r\n            readFormStateRef.current.dirtyFields) {\r\n            const isFieldDirty = !deepEqual(get(defaultValuesRef.current, name), getFieldValue(fieldsRef, name, shallowFieldsStateRef));\r\n            const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\r\n            const previousIsDirty = formStateRef.current.isDirty;\r\n            isFieldDirty\r\n                ? set(formStateRef.current.dirtyFields, name, true)\r\n                : unset(formStateRef.current.dirtyFields, name);\r\n            const state = {\r\n                isDirty: isFormDirty(),\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n            };\r\n            const isChanged = (readFormStateRef.current.isDirty &&\r\n                previousIsDirty !== state.isDirty) ||\r\n                (readFormStateRef.current.dirtyFields &&\r\n                    isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\r\n            isChanged && shouldRender && updateFormState(state);\r\n            return isChanged ? state : {};\r\n        }\r\n        return {};\r\n    }, []);\r\n    const executeValidation = useCallback(async (name, skipReRender) => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!fieldsRef.current[name]) {\r\n                console.warn('📋 Field is missing with `name` attribute: ', name);\r\n                return false;\r\n            }\r\n        }\r\n        const error = (await validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], shallowFieldsStateRef))[name];\r\n        shouldRenderBaseOnError(name, error, skipReRender);\r\n        return isUndefined(error);\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const executeSchemaOrResolverValidation = useCallback(async (names) => {\r\n        const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n        const previousFormIsValid = formStateRef.current.isValid;\r\n        if (Array.isArray(names)) {\r\n            const isInputsValid = names\r\n                .map((name) => {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(formStateRef.current.errors, name, error)\r\n                    : unset(formStateRef.current.errors, name);\r\n                return !error;\r\n            })\r\n                .every(Boolean);\r\n            updateFormState({\r\n                isValid: isEmptyObject(errors),\r\n                isValidating: false,\r\n            });\r\n            return isInputsValid;\r\n        }\r\n        else {\r\n            const error = get(errors, names);\r\n            shouldRenderBaseOnError(names, error, previousFormIsValid !== isEmptyObject(errors), {}, isEmptyObject(errors));\r\n            return !error;\r\n        }\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const trigger = useCallback(async (name) => {\r\n        const fields = name || Object.keys(fieldsRef.current);\r\n        updateIsValidating();\r\n        if (resolverRef.current) {\r\n            return executeSchemaOrResolverValidation(fields);\r\n        }\r\n        if (Array.isArray(fields)) {\r\n            !name && (formStateRef.current.errors = {});\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, null)));\r\n            updateFormState({\r\n                isValidating: false,\r\n            });\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields);\r\n    }, [executeSchemaOrResolverValidation, executeValidation]);\r\n    const setInternalValues = useCallback((name, value, { shouldDirty, shouldValidate }) => {\r\n        const data = {};\r\n        set(data, name, value);\r\n        for (const fieldName of getPath(name, value)) {\r\n            if (fieldsRef.current[fieldName]) {\r\n                setFieldValue(fieldName, get(data, fieldName));\r\n                shouldDirty && updateAndGetDirtyState(fieldName);\r\n                shouldValidate && trigger(fieldName);\r\n            }\r\n        }\r\n    }, [trigger, setFieldValue, updateAndGetDirtyState]);\r\n    const setInternalValue = useCallback((name, value, config) => {\r\n        !shouldUnregister &&\r\n            !isPrimitive(value) &&\r\n            set(shallowFieldsStateRef.current, name, Array.isArray(value) ? [...value] : Object.assign({}, value));\r\n        if (fieldsRef.current[name]) {\r\n            setFieldValue(name, value);\r\n            config.shouldDirty && updateAndGetDirtyState(name);\r\n            config.shouldValidate && trigger(name);\r\n        }\r\n        else if (!isPrimitive(value)) {\r\n            setInternalValues(name, value, config);\r\n            if (fieldArrayNamesRef.current.has(name)) {\r\n                const parentName = getFieldArrayParentName(name) || name;\r\n                set(fieldArrayDefaultValuesRef.current, name, value);\r\n                resetFieldArrayFunctionRef.current[parentName]({\r\n                    [parentName]: get(fieldArrayDefaultValuesRef.current, parentName),\r\n                });\r\n                if ((readFormStateRef.current.isDirty ||\r\n                    readFormStateRef.current.dirtyFields) &&\r\n                    config.shouldDirty) {\r\n                    set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n                    updateFormState({\r\n                        isDirty: !deepEqual(Object.assign(Object.assign({}, getValues()), { [name]: value }), defaultValuesRef.current),\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\r\n    }, [updateAndGetDirtyState, setFieldValue, setInternalValues]);\r\n    const isFieldWatched = (name) => isWatchAllRef.current ||\r\n        watchFieldsRef.current.has(name) ||\r\n        watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\r\n    const renderWatchedInputs = (name) => {\r\n        let found = true;\r\n        if (!isEmptyObject(useWatchFieldsRef.current)) {\r\n            for (const key in useWatchFieldsRef.current) {\r\n                if (!name ||\r\n                    !useWatchFieldsRef.current[key].size ||\r\n                    useWatchFieldsRef.current[key].has(name) ||\r\n                    useWatchFieldsRef.current[key].has(getFieldArrayParentName(name))) {\r\n                    useWatchRenderFunctionsRef.current[key]();\r\n                    found = false;\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    function setValue(name, value, config) {\r\n        setInternalValue(name, value, config || {});\r\n        isFieldWatched(name) && updateFormState();\r\n        renderWatchedInputs(name);\r\n    }\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            let name = target.name;\r\n            const field = fieldsRef.current[name];\r\n            let error;\r\n            let isValid;\r\n            if (field) {\r\n                const isBlurEvent = type === EVENTS.BLUR;\r\n                const shouldSkipValidation = skipValidation(Object.assign({ isBlurEvent,\r\n                    isReValidateOnChange,\r\n                    isReValidateOnBlur, isTouched: !!get(formStateRef.current.touched, name), isSubmitted: formStateRef.current.isSubmitted }, modeRef.current));\r\n                let state = updateAndGetDirtyState(name, false);\r\n                let shouldRender = !isEmptyObject(state) ||\r\n                    (!isBlurEvent && isFieldWatched(name));\r\n                if (isBlurEvent &&\r\n                    !get(formStateRef.current.touched, name) &&\r\n                    readFormStateRef.current.touched) {\r\n                    set(formStateRef.current.touched, name, true);\r\n                    state = Object.assign(Object.assign({}, state), { touched: formStateRef.current.touched });\r\n                }\r\n                if (!shouldUnregister && isCheckBoxInput(target)) {\r\n                    set(shallowFieldsStateRef.current, name, getFieldValue(fieldsRef, name));\r\n                }\r\n                if (shouldSkipValidation) {\r\n                    !isBlurEvent && renderWatchedInputs(name);\r\n                    return ((!isEmptyObject(state) ||\r\n                        (shouldRender && isEmptyObject(state))) &&\r\n                        updateFormState(state));\r\n                }\r\n                updateIsValidating();\r\n                if (resolverRef.current) {\r\n                    const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n                    const previousFormIsValid = formStateRef.current.isValid;\r\n                    error = get(errors, name);\r\n                    if (isCheckBoxInput(target) &&\r\n                        !error &&\r\n                        resolverRef.current) {\r\n                        const parentNodeName = getFieldArrayParentName(name);\r\n                        const currentError = get(errors, parentNodeName, {});\r\n                        currentError.type &&\r\n                            currentError.message &&\r\n                            (error = currentError);\r\n                        if (parentNodeName &&\r\n                            (currentError ||\r\n                                get(formStateRef.current.errors, parentNodeName))) {\r\n                            name = parentNodeName;\r\n                        }\r\n                    }\r\n                    isValid = isEmptyObject(errors);\r\n                    previousFormIsValid !== isValid && (shouldRender = true);\r\n                }\r\n                else {\r\n                    error = (await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef))[name];\r\n                }\r\n                !isBlurEvent && renderWatchedInputs(name);\r\n                shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\r\n            }\r\n        };\r\n    function setFieldArrayDefaultValues(data) {\r\n        if (!shouldUnregister) {\r\n            let copy = cloneObject(data);\r\n            for (const value of fieldArrayNamesRef.current) {\r\n                if (isKey(value) && !copy[value]) {\r\n                    copy = Object.assign(Object.assign({}, copy), { [value]: [] });\r\n                }\r\n            }\r\n            return copy;\r\n        }\r\n        return data;\r\n    }\r\n    function getValues(payload) {\r\n        if (isString(payload)) {\r\n            return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\r\n        }\r\n        if (Array.isArray(payload)) {\r\n            const data = {};\r\n            for (const name of payload) {\r\n                set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\r\n            }\r\n            return data;\r\n        }\r\n        return setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister));\r\n    }\r\n    const validateResolver = useCallback(async (values = {}) => {\r\n        const newDefaultValues = isEmptyObject(fieldsRef.current)\r\n            ? defaultValuesRef.current\r\n            : {};\r\n        const { errors } = (await resolverRef.current(Object.assign(Object.assign(Object.assign({}, newDefaultValues), getValues()), values), contextRef.current, isValidateAllFieldCriteria)) || {};\r\n        const isValid = isEmptyObject(errors);\r\n        formStateRef.current.isValid !== isValid &&\r\n            updateFormState({\r\n                isValid,\r\n            });\r\n    }, [isValidateAllFieldCriteria]);\r\n    const removeFieldEventListener = useCallback((field, forceDelete) => {\r\n        findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, shallowFieldsStateRef, shouldUnregister, forceDelete);\r\n        if (shouldUnregister) {\r\n            unset(validFieldsRef.current, field.ref.name);\r\n            unset(fieldsWithValidationRef.current, field.ref.name);\r\n        }\r\n    }, [shouldUnregister]);\r\n    const updateWatchedValue = useCallback((name) => {\r\n        if (isWatchAllRef.current) {\r\n            updateFormState();\r\n        }\r\n        else {\r\n            for (const watchField of watchFieldsRef.current) {\r\n                if (watchField.startsWith(name)) {\r\n                    updateFormState();\r\n                    break;\r\n                }\r\n            }\r\n            renderWatchedInputs(name);\r\n        }\r\n    }, []);\r\n    const removeFieldEventListenerAndRef = useCallback((field, forceDelete) => {\r\n        if (field) {\r\n            removeFieldEventListener(field, forceDelete);\r\n            if (shouldUnregister && !compact(field.options || []).length) {\r\n                unset(formStateRef.current.errors, field.ref.name);\r\n                set(formStateRef.current.dirtyFields, field.ref.name, true);\r\n                updateFormState({\r\n                    isDirty: isFormDirty(),\r\n                });\r\n                readFormStateRef.current.isValid &&\r\n                    resolverRef.current &&\r\n                    validateResolver();\r\n                updateWatchedValue(field.ref.name);\r\n            }\r\n        }\r\n    }, [validateResolver, removeFieldEventListener]);\r\n    function clearErrors(name) {\r\n        name &&\r\n            (Array.isArray(name) ? name : [name]).forEach((inputName) => fieldsRef.current[inputName] && isKey(inputName)\r\n                ? delete formStateRef.current.errors[inputName]\r\n                : unset(formStateRef.current.errors, inputName));\r\n        updateFormState({\r\n            errors: name ? formStateRef.current.errors : {},\r\n        });\r\n    }\r\n    function setError(name, error) {\r\n        const ref = (fieldsRef.current[name] || {}).ref;\r\n        set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), { ref }));\r\n        updateFormState({\r\n            isValid: false,\r\n        });\r\n        error.shouldFocus && ref && ref.focus && ref.focus();\r\n    }\r\n    const watchInternal = useCallback((fieldNames, defaultValue, watchId) => {\r\n        const watchFields = watchId\r\n            ? useWatchFieldsRef.current[watchId]\r\n            : watchFieldsRef.current;\r\n        let fieldValues = getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, false, fieldNames);\r\n        if (isString(fieldNames)) {\r\n            const parentNodeName = getFieldArrayParentName(fieldNames) || fieldNames;\r\n            if (fieldArrayNamesRef.current.has(parentNodeName)) {\r\n                fieldValues = Object.assign(Object.assign({}, fieldArrayValuesRef.current), fieldValues);\r\n            }\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(get(defaultValuesRef.current, fieldNames))\r\n                ? defaultValue\r\n                : get(defaultValuesRef.current, fieldNames), true);\r\n        }\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? defaultValuesRef.current\r\n            : defaultValue;\r\n        if (Array.isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => (Object.assign(Object.assign({}, previous), { [name]: assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues) })), {});\r\n        }\r\n        isWatchAllRef.current = isUndefined(watchId);\r\n        return transformToNestObject((!isEmptyObject(fieldValues) && fieldValues) ||\r\n            combinedDefaultValues);\r\n    }, []);\r\n    function watch(fieldNames, defaultValue) {\r\n        return watchInternal(fieldNames, defaultValue);\r\n    }\r\n    function unregister(name) {\r\n        for (const fieldName of Array.isArray(name) ? name : [name]) {\r\n            removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\r\n        }\r\n    }\r\n    function registerFieldRef(ref, options = {}) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!ref.name) {\r\n                return console.warn('📋 Field is missing `name` attribute', ref, `https://react-hook-form.com/api#useForm`);\r\n            }\r\n            if (fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\r\n                !RegExp(`^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+].\\\\w+`\r\n                    .replace(/\\[/g, '\\\\[')\r\n                    .replace(/\\]/g, '\\\\]')).test(ref.name)) {\r\n                return console.warn('📋 `name` prop should be in object shape: name=\"test[index].name\"', ref, 'https://react-hook-form.com/api#useFieldArray');\r\n            }\r\n        }\r\n        const { name, type, value } = ref;\r\n        const fieldRefAndValidationOptions = Object.assign({ ref }, options);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\r\n        const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n        const compareRef = (currentRef) => isWeb && (!isHTMLElement(ref) || currentRef === ref);\r\n        let field = fields[name];\r\n        let isEmptyDefaultValue = true;\r\n        let defaultValue;\r\n        if (field &&\r\n            (isRadioOrCheckbox\r\n                ? Array.isArray(field.options) &&\r\n                    compact(field.options).find((option) => {\r\n                        return value === option.ref.value && compareRef(option.ref);\r\n                    })\r\n                : compareRef(field.ref))) {\r\n            fields[name] = Object.assign(Object.assign({}, field), options);\r\n            return;\r\n        }\r\n        if (type) {\r\n            field = isRadioOrCheckbox\r\n                ? Object.assign({ options: [\r\n                        ...compact((field && field.options) || []),\r\n                        {\r\n                            ref,\r\n                        },\r\n                    ], ref: { type, name } }, options) : Object.assign({}, fieldRefAndValidationOptions);\r\n        }\r\n        else {\r\n            field = fieldRefAndValidationOptions;\r\n        }\r\n        fields[name] = field;\r\n        const isEmptyUnmountFields = isUndefined(get(shallowFieldsStateRef.current, name));\r\n        if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\r\n            defaultValue = get(isEmptyUnmountFields\r\n                ? defaultValuesRef.current\r\n                : shallowFieldsStateRef.current, name);\r\n            isEmptyDefaultValue = isUndefined(defaultValue);\r\n            if (!isEmptyDefaultValue && !isFieldArray) {\r\n                setFieldValue(name, defaultValue);\r\n            }\r\n        }\r\n        if (!isEmptyObject(options)) {\r\n            set(fieldsWithValidationRef.current, name, true);\r\n            if (!isOnSubmit && readFormStateRef.current.isValid) {\r\n                validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef).then((error) => {\r\n                    const previousFormIsValid = formStateRef.current.isValid;\r\n                    isEmptyObject(error)\r\n                        ? set(validFieldsRef.current, name, true)\r\n                        : unset(validFieldsRef.current, name);\r\n                    previousFormIsValid !== isEmptyObject(error) && updateFormState();\r\n                });\r\n            }\r\n        }\r\n        if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\r\n            !isFieldArray && unset(formStateRef.current.dirtyFields, name);\r\n        }\r\n        if (type) {\r\n            attachEventListeners(isRadioOrCheckbox && field.options\r\n                ? field.options[field.options.length - 1]\r\n                : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\r\n        }\r\n    }\r\n    function register(refOrRegisterOptions, options) {\r\n        if (!isWindowUndefined) {\r\n            if (isString(refOrRegisterOptions)) {\r\n                registerFieldRef({ name: refOrRegisterOptions }, options);\r\n            }\r\n            else if (isObject(refOrRegisterOptions) &&\r\n                'name' in refOrRegisterOptions) {\r\n                registerFieldRef(refOrRegisterOptions, options);\r\n            }\r\n            else {\r\n                return (ref) => ref && registerFieldRef(ref, refOrRegisterOptions);\r\n            }\r\n        }\r\n    }\r\n    const handleSubmit = useCallback((onValid, onInvalid) => async (e) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors = {};\r\n        let fieldValues = setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, true));\r\n        readFormStateRef.current.isSubmitting &&\r\n            updateFormState({\r\n                isSubmitting: true,\r\n            });\r\n        try {\r\n            if (resolverRef.current) {\r\n                const { errors, values } = await resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\r\n                formStateRef.current.errors = fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                for (const field of Object.values(fieldsRef.current)) {\r\n                    if (field) {\r\n                        const { name } = field.ref;\r\n                        const fieldError = await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\r\n                        if (fieldError[name]) {\r\n                            set(fieldErrors, name, fieldError[name]);\r\n                            unset(validFieldsRef.current, name);\r\n                        }\r\n                        else if (get(fieldsWithValidationRef.current, name)) {\r\n                            unset(formStateRef.current.errors, name);\r\n                            set(validFieldsRef.current, name, true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyObject(fieldErrors) &&\r\n                Object.keys(formStateRef.current.errors).every((name) => name in fieldsRef.current)) {\r\n                updateFormState({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                formStateRef.current.errors = Object.assign(Object.assign({}, formStateRef.current.errors), fieldErrors);\r\n                onInvalid && (await onInvalid(formStateRef.current.errors, e));\r\n                shouldFocusError &&\r\n                    focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\r\n            }\r\n        }\r\n        finally {\r\n            formStateRef.current.isSubmitting = false;\r\n            updateFormState({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\r\n                submitCount: formStateRef.current.submitCount + 1,\r\n            });\r\n        }\r\n    }, [shouldFocusError, isValidateAllFieldCriteria]);\r\n    const resetRefs = ({ errors, isDirty, isSubmitted, touched, isValid, submitCount, dirtyFields, }) => {\r\n        if (!isValid) {\r\n            validFieldsRef.current = {};\r\n            fieldsWithValidationRef.current = {};\r\n        }\r\n        fieldArrayDefaultValuesRef.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        updateFormState({\r\n            submitCount: submitCount ? formStateRef.current.submitCount : 0,\r\n            isDirty: isDirty ? formStateRef.current.isDirty : false,\r\n            isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\r\n            isValid: isValid ? formStateRef.current.isValid : false,\r\n            dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\r\n            touched: touched ? formStateRef.current.touched : {},\r\n            errors: errors ? formStateRef.current.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    };\r\n    const reset = (values, omitResetState = {}) => {\r\n        if (isWeb) {\r\n            for (const field of Object.values(fieldsRef.current)) {\r\n                if (field) {\r\n                    const { ref, options } = field;\r\n                    const inputRef = isRadioOrCheckboxFunction(ref) && Array.isArray(options)\r\n                        ? options[0].ref\r\n                        : ref;\r\n                    if (isHTMLElement(inputRef)) {\r\n                        try {\r\n                            inputRef.closest('form').reset();\r\n                            break;\r\n                        }\r\n                        catch (_a) { }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fieldsRef.current = {};\r\n        defaultValuesRef.current = Object.assign({}, (values || defaultValuesRef.current));\r\n        values && renderWatchedInputs('');\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach((resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray());\r\n        shallowFieldsStateRef.current = shouldUnregister\r\n            ? {}\r\n            : cloneObject(values || defaultValuesRef.current);\r\n        resetRefs(omitResetState);\r\n    };\r\n    useEffect(() => {\r\n        resolver && readFormStateRef.current.isValid && validateResolver();\r\n        observerRef.current =\r\n            observerRef.current || !isWeb\r\n                ? observerRef.current\r\n                : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\r\n    }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\r\n    useEffect(() => () => {\r\n        observerRef.current && observerRef.current.disconnect();\r\n        isUnMount.current = true;\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            return;\r\n        }\r\n        Object.values(fieldsRef.current).forEach((field) => removeFieldEventListenerAndRef(field, true));\r\n    }, []);\r\n    if (!resolver && readFormStateRef.current.isValid) {\r\n        formState.isValid =\r\n            deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\r\n                isEmptyObject(formStateRef.current.errors);\r\n    }\r\n    const commonProps = {\r\n        trigger,\r\n        setValue: useCallback(setValue, [setInternalValue, trigger]),\r\n        getValues: useCallback(getValues, []),\r\n        register: useCallback(register, [defaultValuesRef.current]),\r\n        unregister: useCallback(unregister, []),\r\n        formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        if (prop === 'isValid' && isOnSubmit) {\r\n                            console.warn('📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState');\r\n                        }\r\n                    }\r\n                    if (prop in obj) {\r\n                        readFormStateRef.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return undefined;\r\n                },\r\n            })\r\n            : formState,\r\n    };\r\n    const control = useMemo(() => (Object.assign({ isFormDirty,\r\n        updateWatchedValue,\r\n        shouldUnregister,\r\n        updateFormState,\r\n        removeFieldEventListener,\r\n        watchInternal, mode: modeRef.current, reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnChange,\r\n        }, validateResolver: resolver ? validateResolver : undefined, fieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        useWatchFieldsRef,\r\n        useWatchRenderFunctionsRef,\r\n        fieldArrayDefaultValuesRef,\r\n        validFieldsRef,\r\n        fieldsWithValidationRef,\r\n        fieldArrayNamesRef,\r\n        readFormStateRef,\r\n        formStateRef,\r\n        defaultValuesRef,\r\n        shallowFieldsStateRef,\r\n        fieldArrayValuesRef }, commonProps)), [\r\n        defaultValuesRef.current,\r\n        updateWatchedValue,\r\n        shouldUnregister,\r\n        removeFieldEventListener,\r\n        watchInternal,\r\n    ]);\r\n    return Object.assign({ watch,\r\n        control,\r\n        handleSubmit, reset: useCallback(reset, []), clearErrors: useCallback(clearErrors, []), setError: useCallback(setError, []), errors: formState.errors }, commonProps);\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst FormContext = createContext(null);\r\nFormContext.displayName = 'RHFContext';\r\nconst useFormContext = () => useContext(FormContext);\r\nconst FormProvider = (_a) => {\r\n    var { children } = _a, props = __rest(_a, [\"children\"]);\r\n    return (createElement(FormContext.Provider, { value: Object.assign({}, props) }, children));\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort((a, b) => a - b));\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (Array.isArray(data)) {\r\n        if (isUndefined(data[to])) {\r\n            data[to] = undefined;\r\n        }\r\n        data.splice(to, 0, data.splice(from, 1)[0]);\r\n        return data;\r\n    }\r\n    return [];\r\n};\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    const temp = [data[indexB], data[indexA]];\r\n    data[indexA] = temp[0];\r\n    data[indexB] = temp[1];\r\n};\n\nfunction prepend(data, value) {\r\n    return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\r\n}\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...(Array.isArray(value) ? value : [value || undefined]),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n\nvar fillBooleanArray = (value) => (Array.isArray(value) ? value : [value]).map((data) => {\r\n    if (isObject(data)) {\r\n        const object = {};\r\n        for (const key in data) {\r\n            object[key] = true;\r\n        }\r\n        return object;\r\n    }\r\n    return true;\r\n});\n\nconst mapIds = (values = [], keyName, skipWarn) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!skipWarn) {\r\n            for (const value of values) {\r\n                if (typeof value === 'object') {\r\n                    if (keyName in value) {\r\n                        console.warn(`📋 useFieldArray fieldValues contain the keyName \\`${keyName}\\` which is reserved for use by useFieldArray. https://react-hook-form.com/api#useFieldArray`);\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    console.warn(`📋 useFieldArray input's name should be in object shape instead of flat array. https://react-hook-form.com/api#useFieldArray`);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return values.map((value) => (Object.assign({ [keyName]: value[keyName] || generateId() }, value)));\r\n};\r\nconst useFieldArray = ({ control, name, keyName = 'id', }) => {\r\n    const methods = useFormContext();\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!control && !methods) {\r\n            throw new Error('📋 useFieldArray is missing `control` prop. https://react-hook-form.com/api#useFieldArray');\r\n        }\r\n    }\r\n    const focusIndexRef = useRef(-1);\r\n    const isUnMount = useRef(false);\r\n    const { isFormDirty, updateWatchedValue, resetFieldArrayFunctionRef, fieldArrayNamesRef, fieldsRef, defaultValuesRef, removeFieldEventListener, formStateRef, shallowFieldsStateRef, updateFormState, readFormStateRef, validFieldsRef, fieldsWithValidationRef, fieldArrayDefaultValuesRef, validateResolver, getValues, shouldUnregister, fieldArrayValuesRef, } = control || methods.control;\r\n    const getDefaultValues = (values) => get(shouldUnregister ? values : shallowFieldsStateRef.current, name, []);\r\n    const fieldArrayParentName = getFieldArrayParentName(name);\r\n    const memoizedDefaultValues = useRef([\r\n        ...(get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)\r\n            ? getDefaultValues(fieldArrayDefaultValuesRef.current)\r\n            : getDefaultValues(defaultValuesRef.current)),\r\n    ]);\r\n    const [fields, setFields] = useState(mapIds(memoizedDefaultValues.current, keyName));\r\n    set(fieldArrayValuesRef.current, name, compact(fields));\r\n    const omitKey = (fields) => fields.map((_a = {}) => {\r\n        var _b = keyName, omitted = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\r\n        return rest;\r\n    });\r\n    fieldArrayNamesRef.current.add(name);\r\n    const getFieldArrayValue = useCallback(() => get(fieldArrayValuesRef.current, name, []), [name]);\r\n    const getCurrentFieldsValues = () => mapIds(get(getValues(), name, getFieldArrayValue()).map((item, index) => (Object.assign(Object.assign({}, getFieldArrayValue()[index]), item))), keyName, true);\r\n    fieldArrayNamesRef.current.add(name);\r\n    if (fieldArrayParentName &&\r\n        !get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)) {\r\n        set(fieldArrayDefaultValuesRef.current, fieldArrayParentName, cloneObject(get(defaultValuesRef.current, fieldArrayParentName)));\r\n    }\r\n    const setFieldAndValidState = (fieldsValues) => {\r\n        setFields(fieldsValues);\r\n        set(fieldArrayValuesRef.current, name, fieldsValues);\r\n        if (readFormStateRef.current.isValid && validateResolver) {\r\n            const values = getValues();\r\n            set(values, name, fieldsValues);\r\n            validateResolver(values);\r\n        }\r\n    };\r\n    const resetFields = () => {\r\n        for (const key in fieldsRef.current) {\r\n            if (isMatchFieldArrayName(key, name)) {\r\n                removeFieldEventListener(fieldsRef.current[key], true);\r\n                delete fieldsRef.current[key];\r\n            }\r\n        }\r\n    };\r\n    const cleanup = (ref) => !compact(get(ref, name, [])).length && unset(ref, name);\r\n    const updateDirtyFieldsWithDefaultValues = (updatedFieldArrayValues) => {\r\n        if (updatedFieldArrayValues) {\r\n            set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n        }\r\n    };\r\n    const batchStateUpdate = (method, args, updatedFieldValues, updatedFormValues = [], shouldSet = true, shouldUpdateValid = false) => {\r\n        if (get(shallowFieldsStateRef.current, name)) {\r\n            const output = method(get(shallowFieldsStateRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(shallowFieldsStateRef.current, name, output);\r\n        }\r\n        if (get(fieldArrayDefaultValuesRef.current, name)) {\r\n            const output = method(get(fieldArrayDefaultValuesRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(fieldArrayDefaultValuesRef.current, name, output);\r\n        }\r\n        if (Array.isArray(get(formStateRef.current.errors, name))) {\r\n            const output = method(get(formStateRef.current.errors, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.errors, name, output);\r\n            cleanup(formStateRef.current.errors);\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(formStateRef.current.touched, name)) {\r\n            const output = method(get(formStateRef.current.touched, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.touched, name, output);\r\n            cleanup(formStateRef.current.touched);\r\n        }\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFormValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n            updateDirtyFieldsWithDefaultValues(updatedFieldValues);\r\n            cleanup(formStateRef.current.dirtyFields);\r\n        }\r\n        if (shouldUpdateValid &&\r\n            readFormStateRef.current.isValid &&\r\n            !validateResolver) {\r\n            set(validFieldsRef.current, name, method(get(validFieldsRef.current, name, []), args.argA));\r\n            cleanup(validFieldsRef.current);\r\n            set(fieldsWithValidationRef.current, name, method(get(fieldsWithValidationRef.current, name, []), args.argA));\r\n            cleanup(fieldsWithValidationRef.current);\r\n        }\r\n        if (!isUnMount.current && readFormStateRef.current.isDirty) {\r\n            updateFormState({\r\n                isDirty: isFormDirty(name, omitKey(updatedFormValues)),\r\n            });\r\n        }\r\n    };\r\n    const append = (value, shouldFocus = true) => {\r\n        const appendValue = Array.isArray(value) ? value : [value];\r\n        const updateFormValues = [\r\n            ...getCurrentFieldsValues(),\r\n            ...mapIds(appendValue, keyName),\r\n        ];\r\n        setFieldAndValidState(updateFormValues);\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            updateDirtyFieldsWithDefaultValues(updateFormValues);\r\n            updateFormState({\r\n                isDirty: true,\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n            });\r\n        }\r\n        !shouldUnregister &&\r\n            set(shallowFieldsStateRef.current, name, [\r\n                ...(get(shallowFieldsStateRef.current, name) || []),\r\n                ...cloneObject(appendValue),\r\n            ]);\r\n        focusIndexRef.current = shouldFocus\r\n            ? get(fieldArrayValuesRef.current, name).length - 1\r\n            : -1;\r\n    };\r\n    const prepend$1 = (value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        const updatedFieldArrayValues = prepend(getCurrentFieldsValues(), mapIds(Array.isArray(value) ? value : [value], keyName));\r\n        setFieldAndValidState(updatedFieldArrayValues);\r\n        resetFields();\r\n        batchStateUpdate(prepend, {\r\n            argA: emptyArray,\r\n            argC: fillBooleanArray(value),\r\n        }, updatedFieldArrayValues);\r\n        focusIndexRef.current = shouldFocus ? 0 : -1;\r\n    };\r\n    const remove = (index) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        const updatedFieldValues = removeArrayAt(fieldValues, index);\r\n        setFieldAndValidState(updatedFieldValues);\r\n        resetFields();\r\n        batchStateUpdate(removeArrayAt, {\r\n            argA: index,\r\n            argC: index,\r\n        }, updatedFieldValues, removeArrayAt(fieldValues, index), true, true);\r\n    };\r\n    const insert$1 = (index, value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        const fieldValues = getCurrentFieldsValues();\r\n        const updatedFieldArrayValues = insert(fieldValues, index, mapIds(Array.isArray(value) ? value : [value], keyName));\r\n        setFieldAndValidState(updatedFieldArrayValues);\r\n        resetFields();\r\n        batchStateUpdate(insert, {\r\n            argA: index,\r\n            argB: emptyArray,\r\n            argC: index,\r\n            argD: fillBooleanArray(value),\r\n        }, updatedFieldArrayValues, insert(fieldValues, index));\r\n        focusIndexRef.current = shouldFocus ? index : -1;\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        resetFields();\r\n        setFieldAndValidState([...fieldValues]);\r\n        batchStateUpdate(swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n            argC: indexA,\r\n            argD: indexB,\r\n        }, undefined, fieldValues, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        moveArrayAt(fieldValues, from, to);\r\n        resetFields();\r\n        setFieldAndValidState([...fieldValues]);\r\n        batchStateUpdate(moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n            argC: from,\r\n            argD: to,\r\n        }, undefined, fieldValues, false);\r\n    };\r\n    useEffect(() => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!name) {\r\n                console.warn('📋 useFieldArray is missing `name` attribute. https://react-hook-form.com/api#useFieldArray');\r\n            }\r\n        }\r\n        const defaultValues = get(fieldArrayDefaultValuesRef.current, name);\r\n        if (defaultValues && fields.length < defaultValues.length) {\r\n            set(fieldArrayDefaultValuesRef.current, name, defaultValues.slice(1));\r\n        }\r\n        updateWatchedValue(name);\r\n        if (focusIndexRef.current > -1) {\r\n            for (const key in fieldsRef.current) {\r\n                const field = fieldsRef.current[key];\r\n                if (key.startsWith(`${name}[${focusIndexRef.current}]`) &&\r\n                    field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        focusIndexRef.current = -1;\r\n    }, [fields, name]);\r\n    useEffect(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        if (!getFieldArrayParentName(name)) {\r\n            resetFunctions[name] = (data) => {\r\n                resetFields();\r\n                !data && unset(fieldArrayDefaultValuesRef.current, name);\r\n                unset(shallowFieldsStateRef.current, name);\r\n                memoizedDefaultValues.current = get(data || defaultValuesRef.current, name);\r\n                if (!isUnMount.current) {\r\n                    setFields(mapIds(memoizedDefaultValues.current, keyName));\r\n                }\r\n            };\r\n        }\r\n        return () => {\r\n            isUnMount.current = true;\r\n            shouldUnregister && remove();\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            unset(fieldArrayValuesRef.current, name);\r\n            fieldArrayNames.delete(name);\r\n        };\r\n    }, []);\r\n    return {\r\n        swap: useCallback(swap, [name]),\r\n        move: useCallback(move, [name]),\r\n        prepend: useCallback(prepend$1, [name]),\r\n        append: useCallback(append, [name]),\r\n        remove: useCallback(remove, [name]),\r\n        insert: useCallback(insert$1, [name]),\r\n        fields: compact(fields),\r\n    };\r\n};\n\nvar getInputValue = (event) => isPrimitive(event) ||\r\n    !isObject(event.target) ||\r\n    (isObject(event.target) && !event.type)\r\n    ? event\r\n    : isUndefined(event.target.value)\r\n        ? event.target.checked\r\n        : event.target.value;\n\nfunction useController({ name, rules, defaultValue, control, onFocus, }) {\r\n    const methods = useFormContext();\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!control && !methods) {\r\n            throw new Error('📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller');\r\n        }\r\n    }\r\n    const { defaultValuesRef, setValue, register, unregister, trigger, mode, reValidateMode: { isReValidateOnBlur, isReValidateOnChange }, formState, formStateRef: { current: { isSubmitted, touched, errors }, }, updateFormState, readFormStateRef, fieldsRef, fieldArrayNamesRef, shallowFieldsStateRef, } = control || methods.control;\r\n    const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n    const getInitialValue = () => !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray\r\n        ? get(shallowFieldsStateRef.current, name)\r\n        : isUndefined(defaultValue)\r\n            ? get(defaultValuesRef.current, name)\r\n            : defaultValue;\r\n    const [value, setInputStateValue] = useState(getInitialValue());\r\n    const valueRef = useRef(value);\r\n    const ref = useRef({\r\n        focus: () => null,\r\n    });\r\n    const onFocusRef = useRef(onFocus ||\r\n        (() => {\r\n            if (isFunction(ref.current.focus)) {\r\n                ref.current.focus();\r\n            }\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (!isFunction(ref.current.focus)) {\r\n                    console.warn(`📋 'ref' from Controller render prop must be attached to a React component or a DOM Element whose ref provides a 'focus()' method`);\r\n                }\r\n            }\r\n        }));\r\n    const shouldValidate = useCallback((isBlurEvent) => !skipValidation(Object.assign({ isBlurEvent,\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted, isTouched: !!get(touched, name) }, mode)), [\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted,\r\n        touched,\r\n        name,\r\n        mode,\r\n    ]);\r\n    const commonTask = useCallback(([event]) => {\r\n        const data = getInputValue(event);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    }, []);\r\n    const registerField = useCallback((shouldUpdateValue) => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!name) {\r\n                return console.warn('📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller');\r\n            }\r\n        }\r\n        if (fieldsRef.current[name]) {\r\n            fieldsRef.current[name] = Object.assign({ ref: fieldsRef.current[name].ref }, rules);\r\n        }\r\n        else {\r\n            register(Object.defineProperties({\r\n                name,\r\n                focus: onFocusRef.current,\r\n            }, {\r\n                value: {\r\n                    set(data) {\r\n                        setInputStateValue(data);\r\n                        valueRef.current = data;\r\n                    },\r\n                    get() {\r\n                        return valueRef.current;\r\n                    },\r\n                },\r\n            }), rules);\r\n            shouldUpdateValue = isUndefined(get(defaultValuesRef.current, name));\r\n        }\r\n        shouldUpdateValue &&\r\n            isNotFieldArray &&\r\n            setInputStateValue(getInitialValue());\r\n    }, [rules, name, register]);\r\n    useEffect(() => () => unregister(name), [name]);\r\n    useEffect(() => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (isUndefined(value)) {\r\n                console.warn(`📋 ${name} is missing in the 'defaultValue' prop of either its Controller (https://react-hook-form.com/api#Controller) or useForm (https://react-hook-form.com/api#useForm)`);\r\n            }\r\n            if (!isNotFieldArray && isUndefined(defaultValue)) {\r\n                console.warn('📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller');\r\n            }\r\n        }\r\n        registerField();\r\n    }, [registerField]);\r\n    useEffect(() => {\r\n        !fieldsRef.current[name] && registerField(true);\r\n    });\r\n    const onBlur = useCallback(() => {\r\n        if (readFormStateRef.current.touched && !get(touched, name)) {\r\n            set(touched, name, true);\r\n            updateFormState({\r\n                touched,\r\n            });\r\n        }\r\n        shouldValidate(true) && trigger(name);\r\n    }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\r\n    const onChange = useCallback((...event) => setValue(name, commonTask(event), {\r\n        shouldValidate: shouldValidate(),\r\n        shouldDirty: true,\r\n    }), [setValue, name, shouldValidate]);\r\n    return {\r\n        field: {\r\n            onChange,\r\n            onBlur,\r\n            name,\r\n            value,\r\n            ref,\r\n        },\r\n        meta: Object.defineProperties({\r\n            invalid: !!get(errors, name),\r\n        }, {\r\n            isDirty: {\r\n                get() {\r\n                    return !!get(formState.dirtyFields, name);\r\n                },\r\n            },\r\n            isTouched: {\r\n                get() {\r\n                    return !!get(formState.touched, name);\r\n                },\r\n            },\r\n        }),\r\n    };\r\n}\n\nfunction useWatch({ control, name, defaultValue, }) {\r\n    const methods = useFormContext();\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!control && !methods) {\r\n            throw new Error('📋 useWatch is missing `control` prop. https://react-hook-form.com/api#useWatch');\r\n        }\r\n    }\r\n    const { useWatchFieldsRef, useWatchRenderFunctionsRef, watchInternal, defaultValuesRef, } = control || methods.control;\r\n    const updateValue = useState()[1];\r\n    const idRef = useRef();\r\n    const defaultValueRef = useRef(defaultValue);\r\n    useEffect(() => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (name === '') {\r\n                console.warn('📋 useWatch is missing `name` attribute. https://react-hook-form.com/api#useWatch');\r\n            }\r\n        }\r\n        const id = (idRef.current = generateId());\r\n        const watchFieldsHookRender = useWatchRenderFunctionsRef.current;\r\n        const watchFieldsHook = useWatchFieldsRef.current;\r\n        watchFieldsHook[id] = new Set();\r\n        watchFieldsHookRender[id] = () => updateValue({});\r\n        watchInternal(name, defaultValueRef.current, id);\r\n        return () => {\r\n            delete watchFieldsHook[id];\r\n            delete watchFieldsHookRender[id];\r\n        };\r\n    }, [\r\n        name,\r\n        useWatchRenderFunctionsRef,\r\n        useWatchFieldsRef,\r\n        watchInternal,\r\n        defaultValueRef,\r\n    ]);\r\n    return idRef.current\r\n        ? watchInternal(name, defaultValueRef.current, idRef.current)\r\n        : isUndefined(defaultValue)\r\n            ? isString(name)\r\n                ? get(defaultValuesRef.current, name)\r\n                : Array.isArray(name)\r\n                    ? name.reduce((previous, inputName) => (Object.assign(Object.assign({}, previous), { [inputName]: get(defaultValuesRef.current, inputName) })), {})\r\n                    : defaultValuesRef.current\r\n            : defaultValue;\r\n}\n\nconst Controller = (props) => {\r\n    const { rules, as, render, defaultValue, control, onFocus } = props, rest = __rest(props, [\"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\r\n    const { field, meta } = useController(props);\r\n    const componentProps = Object.assign(Object.assign({}, rest), field);\r\n    return as\r\n        ? isValidElement(as)\r\n            ? cloneElement(as, componentProps)\r\n            : createElement(as, componentProps)\r\n        : render\r\n            ? render(field, meta)\r\n            : null;\r\n};\n\nexport { Controller, FormProvider, appendErrors, get, transformToNestObject, useController, useFieldArray, useForm, useFormContext, useWatch };\n//# sourceMappingURL=index.esm.js.map\n","export var convertObjectToArray = function convertObjectToArray(arr) {\n  return Object.keys(arr).map(function (key) {\n    return {\n      value: arr[key],\n      information: capitalize(key)\n    };\n  });\n};\n\nvar capitalize = function capitalize(word) {\n  return word.toLowerCase().replace(/\\w/, function (firstLetter) {\n    return firstLetter.toUpperCase();\n  });\n};","import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookpro/Desktop/Projects/React-Projects/trello-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { CSVLink } from 'react-csv';\nimport { convertObjectToArray } from '../../helpers/convertObjectArray';\n\nvar ProcessBackgroundInformation = function ProcessBackgroundInformation() {\n  var btnRef = useRef();\n\n  var _useState = useState([]),\n      csvData = _useState[0],\n      setCsvData = _useState[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var headers = [{\n    label: 'Information',\n    key: 'information'\n  }, {\n    label: 'Value',\n    key: 'value'\n  }];\n  var csvReport = {\n    filename: 'process-background.csv',\n    headers: headers,\n    data: csvData\n  };\n\n  var exportBackgroundInformation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var array;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              array = convertObjectToArray(data);\n              _context.next = 3;\n              return setCsvData(array);\n\n            case 3:\n              btnRef.current.link.click();\n              console.log({\n                array: array\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function exportBackgroundInformation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"section\", {\n      className: \"process-bg\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsx(\"h1\", {\n                children: \"Process Background Information\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxs(\"form\", {\n                onSubmit: handleSubmit(exportBackgroundInformation),\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mb-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead pl-3\",\n                      children: \"Information\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 pr-sm-0 mb-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead pl-3\",\n                      children: \"Value\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Title\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"title\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Doc_Num\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"doc_num\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Purpose\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"purpose\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Scope\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"scope\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Accountability\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"accountability\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Responsibility\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"responsibility\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"References\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"references\",\n                      placeholder: \"User inputs\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Definitions\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      type: \"text\",\n                      name: \"definitions\",\n                      placeholder: \"User inputs\"\n                    })\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsx(\"button\", {\n                    button: \"submit\",\n                    className: \"btn btn-green mt-4\",\n                    children: \"Export to data frame\"\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(CSVLink, _objectSpread(_objectSpread({\n                className: \"d-none\",\n                ref: btnRef\n              }, csvReport), {}, {\n                children: \"Export\"\n              }))]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default ProcessBackgroundInformation;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"]}}